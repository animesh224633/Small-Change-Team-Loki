2022-11-02 19:12:46.058  WARN --- ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'createLogger' defined in com.smallchange.TradeHistoryApplication: Cannot register bean definition [Root bean: class [null]; scope=prototype; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=tradeHistoryApplication; factoryMethodName=createLogger; initMethodName=null; destroyMethodName=(inferred); defined in com.smallchange.TradeHistoryApplication] for bean 'createLogger': There is already [Root bean: class [null]; scope=prototype; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=appConfigurator; factoryMethodName=createLogger; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/smallchange/configuration/AppConfigurator.class]] bound.
2022-11-02 19:12:46.097 ERROR --- o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'createLogger', defined in com.smallchange.TradeHistoryApplication, could not be registered. A bean with that name has already been defined in class path resource [com/smallchange/configuration/AppConfigurator.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2022-11-02 19:13:35.870  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 19:13:36.388 ERROR --- o.m.spring.mapper.MapperFactoryBean      : Error while adding the mapper 'interface com.smallchange.integration.mapper.TradeHistoryMapper' to configuration.
org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'com/smallchange/integration/mapper/TradeHistoryMapper.xml'. Cause: org.apache.ibatis.builder.BuilderException: Wrong namespace. Expected 'com.smallchange.integration.mapper.TradeHistoryMapper' but found 'com.smallchange.integration.TradeHistoryMapper'.
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:123)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:95)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.loadXmlResource(MapperAnnotationBuilder.java:179)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:118)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:864)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:740)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:415)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1301)
	at com.smallchange.TradeHistoryApplication.main(TradeHistoryApplication.java:16)
Caused by: org.apache.ibatis.builder.BuilderException: Wrong namespace. Expected 'com.smallchange.integration.mapper.TradeHistoryMapper' but found 'com.smallchange.integration.TradeHistoryMapper'.
	at org.apache.ibatis.builder.MapperBuilderAssistant.setCurrentNamespace(MapperBuilderAssistant.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:115)
	... 39 common frames omitted
2022-11-02 19:13:36.390  WARN --- ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tradeHistoryDaoMyBatisImpl': Unsatisfied dependency expressed through field 'tradeHistoryMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tradeHistoryMapper' defined in file [D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\TradeHistoryMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'com/smallchange/integration/mapper/TradeHistoryMapper.xml'. Cause: org.apache.ibatis.builder.BuilderException: Wrong namespace. Expected 'com.smallchange.integration.mapper.TradeHistoryMapper' but found 'com.smallchange.integration.TradeHistoryMapper'.
2022-11-02 19:13:36.470 ERROR --- o.s.boot.SpringApplication               : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tradeHistoryDaoMyBatisImpl': Unsatisfied dependency expressed through field 'tradeHistoryMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tradeHistoryMapper' defined in file [D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\TradeHistoryMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'com/smallchange/integration/mapper/TradeHistoryMapper.xml'. Cause: org.apache.ibatis.builder.BuilderException: Wrong namespace. Expected 'com.smallchange.integration.mapper.TradeHistoryMapper' but found 'com.smallchange.integration.TradeHistoryMapper'.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:740)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:415)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1301)
	at com.smallchange.TradeHistoryApplication.main(TradeHistoryApplication.java:16)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tradeHistoryMapper' defined in file [D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\TradeHistoryMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'com/smallchange/integration/mapper/TradeHistoryMapper.xml'. Cause: org.apache.ibatis.builder.BuilderException: Wrong namespace. Expected 'com.smallchange.integration.mapper.TradeHistoryMapper' but found 'com.smallchange.integration.TradeHistoryMapper'.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 20 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'com/smallchange/integration/mapper/TradeHistoryMapper.xml'. Cause: org.apache.ibatis.builder.BuilderException: Wrong namespace. Expected 'com.smallchange.integration.mapper.TradeHistoryMapper' but found 'com.smallchange.integration.TradeHistoryMapper'.
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:83)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 30 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'com/smallchange/integration/mapper/TradeHistoryMapper.xml'. Cause: org.apache.ibatis.builder.BuilderException: Wrong namespace. Expected 'com.smallchange.integration.mapper.TradeHistoryMapper' but found 'com.smallchange.integration.TradeHistoryMapper'.
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:123)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:95)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.loadXmlResource(MapperAnnotationBuilder.java:179)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:118)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:864)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	... 33 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Wrong namespace. Expected 'com.smallchange.integration.mapper.TradeHistoryMapper' but found 'com.smallchange.integration.TradeHistoryMapper'.
	at org.apache.ibatis.builder.MapperBuilderAssistant.setCurrentNamespace(MapperBuilderAssistant.java:78)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:115)
	... 39 common frames omitted
2022-11-02 19:16:26.097  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 19:16:27.205  WARN --- ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2022-11-02 19:16:27.291 ERROR --- o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2022-11-02 19:17:08.204  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 19:17:09.384  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-02 19:17:21.978 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 19:17:22.041 ERROR --- c.s.restService.TradeHistoryService      : 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
### The error may exist in com/smallchange/integration/mapper/TradeHistoryMapper.java (best guess)
### The error may involve com.smallchange.integration.mapper.TradeHistoryMapper.getTradeHistory
### The error occurred while executing a query
### SQL: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
### Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
2022-11-02 19:18:45.882  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 19:18:47.116  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-02 19:18:52.201 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 19:18:52.267 ERROR --- c.s.restService.TradeHistoryService      : 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
### The error may exist in com/smallchange/integration/mapper/TradeHistoryMapper.java (best guess)
### The error may involve com.smallchange.integration.mapper.TradeHistoryMapper.getTradeHistory
### The error occurred while executing a query
### SQL: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
### Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
2022-11-02 19:25:06.266  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 19:25:07.412  WARN --- ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2022-11-02 19:25:07.488 ERROR --- o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2022-11-02 19:25:16.424  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 19:25:17.564  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-02 19:25:23.477 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 19:25:23.551 ERROR --- c.s.restService.TradeHistoryService      : 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
### The error may exist in file [D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\TradeHistoryMapper.xml]
### The error may involve com.smallchange.integration.mapper.TradeHistoryMapper.getTradeHistory
### The error occurred while executing a query
### SQL: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
### Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
2022-11-02 19:25:59.890  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 19:26:01.053  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-02 19:26:07.850 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 19:26:07.929 ERROR --- c.s.restService.TradeHistoryService      : 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
### The error may exist in file [D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\TradeHistoryMapper.xml]
### The error may involve com.smallchange.integration.mapper.TradeHistoryMapper.getTradeHistory
### The error occurred while executing a query
### SQL: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
### Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
2022-11-02 19:27:03.620  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 19:27:04.772  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-02 19:27:20.207 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id =?
2022-11-02 19:27:20.270 ERROR --- c.s.restService.TradeHistoryService      : 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o 
		join instrument i on o.code=i.code where client_id
		=?]
### The error may exist in file [D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\TradeHistoryMapper.xml]
### The error may involve com.smallchange.integration.mapper.TradeHistoryMapper.getTradeHistory
### The error occurred while executing a query
### SQL: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o    join instrument i on o.code=i.code where client_id   =?
### Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o 
		join instrument i on o.code=i.code where client_id
		=?]
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o 
		join instrument i on o.code=i.code where client_id
		=?]
2022-11-02 19:28:22.360  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 19:28:23.532  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-02 19:28:39.669 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 19:28:39.730 ERROR --- c.s.restService.TradeHistoryService      : 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
### The error may exist in file [D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\TradeHistoryMapper.xml]
### The error may involve com.smallchange.integration.mapper.TradeHistoryMapper.getTradeHistory
### The error occurred while executing a query
### SQL: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
### Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?]
2022-11-02 19:29:26.010  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 19:29:27.203  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-02 19:29:32.160 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=1
2022-11-02 19:29:32.221 ERROR --- c.s.restService.TradeHistoryService      : 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=1]
### The error may exist in file [D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\TradeHistoryMapper.xml]
### The error may involve com.smallchange.integration.mapper.TradeHistoryMapper.getTradeHistory
### The error occurred while executing a query
### SQL: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=1
### Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=1]
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=1]
2022-11-02 19:34:39.212  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 19:34:40.466  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-02 19:34:54.626 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=1
2022-11-02 19:34:54.687 ERROR --- c.s.restService.TradeHistoryService      : 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=1]
### The error may exist in file [D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\TradeHistoryMapper.xml]
### The error may involve com.smallchange.integration.mapper.TradeHistoryMapper.getTradeHistory
### The error occurred while executing a query
### SQL: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=1
### Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=1]
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: ORDERS in statement [select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=1]
2022-11-02 19:42:49.717  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 19:42:51.204  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-02 19:43:02.655 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=1
2022-11-02 19:43:02.674 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 
2022-11-02 19:43:02.695 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 19:43:02.696  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 19:43:54.283  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 19:43:55.744  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-02 19:44:02.705 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 19:44:02.723 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 19:44:02.743 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 19:44:02.744  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 19:44:08.661 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 19:44:08.662 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 2(String)
2022-11-02 19:44:08.664 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 19:44:08.664  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 19:44:15.462 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 19:44:15.462 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 19:44:15.463 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 19:44:15.464  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 19:44:20.271 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 19:44:20.272 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 2(String)
2022-11-02 19:44:20.274 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 19:44:20.274  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:01:20.386 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:01:20.388 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:01:20.391 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:01:20.391  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:07:09.594 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:07:09.619 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:07:09.646 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:07:59.081 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:07:59.102 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:07:59.129 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:09:07.126 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:09:07.149 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:09:07.178 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:09:56.698 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:09:56.721 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:09:56.750 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:11:05.128 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:11:05.157 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:11:05.189 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:12:49.972 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:12:49.992 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:12:50.020 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:13:18.187 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:13:18.213 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:13:18.241 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:16:26.827 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:16:26.851 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:16:26.879 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:16:26.918 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:16:26.919 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 21:16:26.920 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 21:18:07.305 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:18:07.334 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:18:07.361 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:18:07.399 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:18:07.400 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 21:18:07.401 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 21:18:54.230 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:18:54.251 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:18:54.280 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:18:54.315 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:18:54.317 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 21:18:54.317 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 21:22:22.655 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:22:22.675 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:22:22.700 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:22:22.739 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:22:22.740 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 21:22:22.740 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 21:28:37.716  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 7780 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:28:37.718 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:28:37.719  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:28:40.043  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:28:42.873  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51280 (http) with context path ''
2022-11-02 21:28:42.893  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.689 seconds (JVM running for 7.038)
2022-11-02 21:28:42.974  WARN --- o.s.test.context.TestContextManager      : Caught exception while invoking 'beforeTestMethod' callback on TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@768fc0f2] for test method [public void com.smallchange.restService.TradeHistoryServiceE2ETest.testQueryForAllPresidents()] and test instance [com.smallchange.restService.TradeHistoryServiceE2ETest@3e6104fc]
org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of class path resource [schema.sql]: CREATE TABLE CLIENT ( CLIENT_ID VARCHAR(100), CLIENT_NAME VARCHAR(100), CLIENT_MAIL VARCHAR(100), CLIENT_SMALLCHANGE_WALLET FLOAT, PASSWORD VARCHAR(100), CONSTRAINT CLIENT_ID_PK PRIMARY KEY(CLIENT_ID) ); nested exception is java.sql.SQLSyntaxErrorException: object name already exists: CLIENT in statement [CREATE TABLE CLIENT ( CLIENT_ID VARCHAR(100), CLIENT_NAME VARCHAR(100), CLIENT_MAIL VARCHAR(100), CLIENT_SMALLCHANGE_WALLET FLOAT, PASSWORD VARCHAR(100), CONSTRAINT CLIENT_ID_PK PRIMARY KEY(CLIENT_ID) )]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.execute(ResourceDatabasePopulator.java:269)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$4(SqlScriptsTestExecutionListener.java:279)
	at org.springframework.transaction.support.TransactionOperations.lambda$executeWithoutResult$0(TransactionOperations.java:68)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.transaction.support.TransactionOperations.executeWithoutResult(TransactionOperations.java:67)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:279)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$0(SqlScriptsTestExecutionListener.java:201)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:201)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:148)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.beforeTestMethod(SqlScriptsTestExecutionListener.java:118)
	at org.springframework.test.context.TestContextManager.beforeTestMethod(TestContextManager.java:293)
	at org.springframework.test.context.junit.jupiter.SpringExtension.beforeEach(SpringExtension.java:174)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachCallbacks$2(TestMethodTestDescriptor.java:163)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:199)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:199)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachCallbacks(TestMethodTestDescriptor.java:162)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:129)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:95)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:91)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:60)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
Caused by: java.sql.SQLSyntaxErrorException: object name already exists: CLIENT in statement [CREATE TABLE CLIENT ( CLIENT_ID VARCHAR(100), CLIENT_NAME VARCHAR(100), CLIENT_MAIL VARCHAR(100), CLIENT_SMALLCHANGE_WALLET FLOAT, PASSWORD VARCHAR(100), CONSTRAINT CLIENT_ID_PK PRIMARY KEY(CLIENT_ID) )]
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCStatement.execute(Unknown Source)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 68 common frames omitted
Caused by: org.hsqldb.HsqlException: object name already exists: CLIENT
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.SchemaObjectSet.checkAdd(Unknown Source)
	at org.hsqldb.SchemaManager.checkSchemaObjectNotExists(Unknown Source)
	at org.hsqldb.StatementSchema.setOrCheckObjectName(Unknown Source)
	at org.hsqldb.StatementSchema.getResult(Unknown Source)
	at org.hsqldb.StatementSchema.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.executeDirectStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 73 common frames omitted
2022-11-02 21:32:07.187  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 6732 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:32:07.188 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:32:07.189  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:32:09.479  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:32:12.336  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51292 (http) with context path ''
2022-11-02 21:32:12.363  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.674 seconds (JVM running for 7.04)
2022-11-02 21:32:12.457  WARN --- o.s.test.context.TestContextManager      : Caught exception while invoking 'beforeTestMethod' callback on TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@20f5281c] for test method [public void com.smallchange.restService.TradeHistoryServiceE2ETest.testQueryForAllPresidents()] and test instance [com.smallchange.restService.TradeHistoryServiceE2ETest@65b104b9]
org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of class path resource [schema.sql]: DROP TABLE HOLDINGS DROP TABLE ORDERS DROP TABLE INSTRUMENT DROP TABLE CLIENT_FINANCE_DETAILS DROP TABLE CLIENT CREATE TABLE CLIENT ( CLIENT_ID VARCHAR(100), CLIENT_NAME VARCHAR(100), CLIENT_MAIL VARCHAR(100), CLIENT_SMALLCHANGE_WALLET FLOAT, PASSWORD VARCHAR(100), CONSTRAINT CLIENT_ID_PK PRIMARY KEY(CLIENT_ID) ); nested exception is java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: HOLDINGS in statement [DROP TABLE HOLDINGS ]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.execute(ResourceDatabasePopulator.java:269)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$4(SqlScriptsTestExecutionListener.java:279)
	at org.springframework.transaction.support.TransactionOperations.lambda$executeWithoutResult$0(TransactionOperations.java:68)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.transaction.support.TransactionOperations.executeWithoutResult(TransactionOperations.java:67)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:279)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$0(SqlScriptsTestExecutionListener.java:201)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:201)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:148)
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.beforeTestMethod(SqlScriptsTestExecutionListener.java:118)
	at org.springframework.test.context.TestContextManager.beforeTestMethod(TestContextManager.java:293)
	at org.springframework.test.context.junit.jupiter.SpringExtension.beforeEach(SpringExtension.java:174)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachCallbacks$2(TestMethodTestDescriptor.java:163)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:199)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:199)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachCallbacks(TestMethodTestDescriptor.java:162)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:129)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:95)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:91)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:60)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
Caused by: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: HOLDINGS in statement [DROP TABLE HOLDINGS ]
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCStatement.execute(Unknown Source)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 68 common frames omitted
Caused by: org.hsqldb.HsqlException: user lacks privilege or object not found: HOLDINGS
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.StatementSchema.getResult(Unknown Source)
	at org.hsqldb.StatementSchema.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.executeDirectStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 73 common frames omitted
2022-11-02 21:33:50.852  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 3692 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:33:50.854 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:33:50.855  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:33:53.087  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:33:55.989  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51298 (http) with context path ''
2022-11-02 21:33:56.006  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.64 seconds (JVM running for 6.989)
2022-11-02 21:33:56.958 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:33:56.991 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:33:57.022 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:33:57.025  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:35:50.107  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 5984 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:35:50.108 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:35:50.109  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:35:52.373  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:35:55.216  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51307 (http) with context path ''
2022-11-02 21:35:55.239  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.661 seconds (JVM running for 7.021)
2022-11-02 21:35:56.229 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:35:56.256 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:35:56.294 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:35:56.295  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:38:54.482  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 6460 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:38:54.484 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:38:54.486  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:38:56.753  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:38:59.732  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51317 (http) with context path ''
2022-11-02 21:38:59.751  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.789 seconds (JVM running for 7.1)
2022-11-02 21:39:00.718 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:39:00.747 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:39:00.796 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:39:00.799  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:40:17.921  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 5372 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:40:17.923 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:40:17.924  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:40:20.270  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:40:23.127  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51324 (http) with context path ''
2022-11-02 21:40:23.145  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.748 seconds (JVM running for 7.11)
2022-11-02 21:40:24.080 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:40:24.119 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:40:24.144 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:40:24.146  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:42:02.896  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 2772 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:42:02.898 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:42:02.898  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:42:05.150  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:42:08.012  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51333 (http) with context path ''
2022-11-02 21:42:08.029  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.638 seconds (JVM running for 7.029)
2022-11-02 21:42:08.928 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:42:08.946 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:42:08.977 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:42:08.978  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:42:53.750  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 7592 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:42:53.753 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:42:53.754  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:42:56.037  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:42:58.849  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51339 (http) with context path ''
2022-11-02 21:42:58.871  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.661 seconds (JVM running for 7.264)
2022-11-02 21:42:59.797 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:42:59.821 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:42:59.848 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:42:59.850  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:43:19.350  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 7336 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:43:19.351 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:43:19.352  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:43:21.690  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:43:24.584  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51345 (http) with context path ''
2022-11-02 21:43:24.600  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.778 seconds (JVM running for 7.279)
2022-11-02 21:43:25.547 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:43:25.574 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:43:25.608 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:43:25.610  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:45:14.025  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 7196 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:45:14.027 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:45:14.029  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:45:16.403  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:45:19.270  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51352 (http) with context path ''
2022-11-02 21:45:19.290  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.807 seconds (JVM running for 7.19)
2022-11-02 21:45:20.222 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:45:20.243 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:45:20.268 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:45:20.271  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:46:08.464  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 8068 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:46:08.466 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:46:08.467  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:46:10.911  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:46:13.950  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51360 (http) with context path ''
2022-11-02 21:46:13.975  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 6.032 seconds (JVM running for 7.401)
2022-11-02 21:46:15.024 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:46:15.056 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:46:15.078 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:46:15.080  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:48:46.814  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 3872 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:48:46.816 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:48:46.817  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:48:49.155  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:48:52.087  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51367 (http) with context path ''
2022-11-02 21:48:52.110  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.827 seconds (JVM running for 7.184)
2022-11-02 21:48:53.041 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:48:53.069 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:48:53.115 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:48:53.120  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:50:08.543  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 7068 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:50:08.545 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:50:08.546  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:50:10.899  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:50:13.780  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51376 (http) with context path ''
2022-11-02 21:50:13.800  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.804 seconds (JVM running for 7.149)
2022-11-02 21:50:14.765 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:50:14.791 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:50:14.816 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:50:14.818  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:51:12.011  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 3344 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:51:12.012 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:51:12.014  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:51:14.317  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:51:17.219  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51382 (http) with context path ''
2022-11-02 21:51:17.243  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.732 seconds (JVM running for 7.078)
2022-11-02 21:51:18.193 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:51:18.218 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 21:51:18.243 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 21:51:18.245 ERROR --- c.s.restService.TradeHistoryService      : No countries in the db with that id
2022-11-02 21:51:18.456 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:51:18.457 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:51:18.463 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:51:18.465  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 21:59:43.537  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 7848 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 21:59:43.539 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 21:59:43.541  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 21:59:45.982  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 21:59:48.900  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51402 (http) with context path ''
2022-11-02 21:59:48.923  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.9 seconds (JVM running for 7.299)
2022-11-02 21:59:49.874 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:59:49.919 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 21:59:49.943 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 21:59:49.946 ERROR --- c.s.restService.TradeHistoryService      : No countries in the db with that id
2022-11-02 21:59:50.153 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 21:59:50.154 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 21:59:50.159 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 21:59:50.159  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:00:36.556  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 7724 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:00:36.562 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:00:36.565  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 22:00:38.884  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 22:00:41.835  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51412 (http) with context path ''
2022-11-02 22:00:41.854  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.841 seconds (JVM running for 7.2)
2022-11-02 22:00:42.756 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:00:42.778 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 22:00:42.799 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 22:00:42.801 ERROR --- c.s.restService.TradeHistoryService      : No countries in the db with that id
2022-11-02 22:00:43.008 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:00:43.010 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:00:43.015 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:00:43.016  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:11:01.930  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : Starting TradeHistoryServiceIntegrationTest using Java 17.0.1 on a684433win with PID 1012 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:11:01.932 DEBUG --- c.s.r.TradeHistoryServiceIntegrationTest : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:11:01.934  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : The following 1 profile is active: "dev"
2022-11-02 22:11:06.667  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : Started TradeHistoryServiceIntegrationTest in 5.234 seconds (JVM running for 6.585)
2022-11-02 22:11:07.420 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:11:07.443 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:11:07.471 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:11:07.473  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:12:14.510  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : Starting TradeHistoryServiceIntegrationTest using Java 17.0.1 on a684433win with PID 7560 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:12:14.514 DEBUG --- c.s.r.TradeHistoryServiceIntegrationTest : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:12:14.515  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : The following 1 profile is active: "dev"
2022-11-02 22:12:19.171  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : Started TradeHistoryServiceIntegrationTest in 5.134 seconds (JVM running for 6.516)
2022-11-02 22:12:19.917 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:12:19.990 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:12:20.017 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:12:20.043 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:12:20.046  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:13:10.730  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : Starting TradeHistoryServiceIntegrationTest using Java 17.0.1 on a684433win with PID 2068 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:13:10.732 DEBUG --- c.s.r.TradeHistoryServiceIntegrationTest : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:13:10.733  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : The following 1 profile is active: "dev"
2022-11-02 22:13:15.353  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : Started TradeHistoryServiceIntegrationTest in 5.105 seconds (JVM running for 6.494)
2022-11-02 22:13:16.083 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:13:16.154 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:13:16.178 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:13:16.207 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:13:16.210  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:13:16.229 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:13:16.231 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 22:13:16.231 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 22:13:16.232 ERROR --- c.s.restService.TradeHistoryService      : No countries in the db with that id
2022-11-02 22:14:02.951  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : Starting TradeHistoryServiceIntegrationTest using Java 17.0.1 on a684433win with PID 6192 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:14:02.952 DEBUG --- c.s.r.TradeHistoryServiceIntegrationTest : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:14:02.953  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : The following 1 profile is active: "dev"
2022-11-02 22:14:07.980  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : Started TradeHistoryServiceIntegrationTest in 5.542 seconds (JVM running for 6.924)
2022-11-02 22:14:08.815 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:14:08.890 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:14:08.913 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:14:08.943 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:14:08.945  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:14:09.020  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 6192 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:14:09.020 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:14:09.020  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 22:14:09.726  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 22:14:11.049  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51454 (http) with context path ''
2022-11-02 22:14:11.058  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 2.084 seconds (JVM running for 10.002)
2022-11-02 22:14:11.302 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:14:11.304 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:14:11.306 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:14:11.306  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:23:39.221  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a684433win with PID 7236 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:23:39.223 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:23:39.223  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-02 22:23:41.532  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 2.955 seconds (JVM running for 4.262)
2022-11-02 22:23:41.697  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:24:37.649  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a684433win with PID 648 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:24:37.651 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:24:37.652  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-02 22:24:40.030  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 3.026 seconds (JVM running for 4.288)
2022-11-02 22:24:40.154  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:24:40.354 ERROR --- c.s.restService.TradeHistoryService      : No countries in the db with that id
2022-11-02 22:25:31.459  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a684433win with PID 7344 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:25:31.461 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:25:31.462  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-02 22:25:33.834  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 2.984 seconds (JVM running for 4.333)
2022-11-02 22:25:33.965  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:25:34.178 ERROR --- c.s.restService.TradeHistoryService      : No countries in the db with that id
2022-11-02 22:26:26.527  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a684433win with PID 3344 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:26:26.528 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:26:26.529  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-02 22:26:28.939  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 3.01 seconds (JVM running for 4.367)
2022-11-02 22:26:29.131  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:26:29.338 ERROR --- c.s.restService.TradeHistoryService      : No countries in the db with that id
2022-11-02 22:27:34.824  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a684433win with PID 3356 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:27:34.825 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:27:34.826  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-02 22:27:37.171  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 2.968 seconds (JVM running for 4.255)
2022-11-02 22:27:37.283  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:27:37.474 ERROR --- c.s.restService.TradeHistoryService      : No countries in the db with that id
2022-11-02 22:27:37.503 ERROR --- c.s.restService.TradeHistoryService      : mock exception
2022-11-02 22:28:14.512  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a684433win with PID 4540 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:28:14.514 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:28:14.515  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-02 22:28:16.810  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 2.928 seconds (JVM running for 4.22)
2022-11-02 22:28:16.930 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:28:17.021  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:28:17.202 ERROR --- c.s.restService.TradeHistoryService      : No countries in the db with that id
2022-11-02 22:28:17.218 ERROR --- c.s.restService.TradeHistoryService      : mock exception
2022-11-02 22:28:56.554  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a684433win with PID 7188 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:28:56.555 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:28:56.556  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-02 22:28:58.864  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 2.946 seconds (JVM running for 4.279)
2022-11-02 22:28:58.993 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:28:59.083  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:28:59.257 ERROR --- c.s.restService.TradeHistoryService      : No countries in the db with that id
2022-11-02 22:28:59.270 ERROR --- c.s.restService.TradeHistoryService      : mock exception
2022-11-02 22:30:03.365  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a684433win with PID 7808 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:30:03.367 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:30:03.368  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-02 22:30:05.684  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 2.952 seconds (JVM running for 4.448)
2022-11-02 22:30:05.846 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:30:05.910  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:30:06.053 ERROR --- c.s.restService.TradeHistoryService      : No countries in the db with that id
2022-11-02 22:30:06.065 ERROR --- c.s.restService.TradeHistoryService      : mock exception
2022-11-02 22:30:06.141  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : Starting TradeHistoryServiceIntegrationTest using Java 17.0.1 on a684433win with PID 7808 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:30:06.141 DEBUG --- c.s.r.TradeHistoryServiceIntegrationTest : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:30:06.141  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : The following 1 profile is active: "dev"
2022-11-02 22:30:09.556  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : Started TradeHistoryServiceIntegrationTest in 3.46 seconds (JVM running for 8.319)
2022-11-02 22:30:09.589 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:30:09.646 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:30:09.673 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:30:09.703 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:30:09.706  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:30:09.758  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 7808 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:30:09.758 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:30:09.759  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 22:30:10.437  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 22:30:11.779  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51503 (http) with context path ''
2022-11-02 22:30:11.787  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 2.064 seconds (JVM running for 10.55)
2022-11-02 22:30:11.952 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:30:11.954 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:30:11.956 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:30:11.957  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:31:51.089  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-02 22:31:52.576  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-02 22:32:09.873 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:32:09.890 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:32:09.911 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:32:09.912  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:32:15.005 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:32:15.006 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 2(String)
2022-11-02 22:32:15.008 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:32:15.009  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:32:22.479 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:32:22.480 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 3(String)
2022-11-02 22:32:22.481 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 22:32:22.481 ERROR --- c.s.restService.TradeHistoryService      : No countries in the db with that id
2022-11-02 22:36:44.936 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:36:44.963 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:36:44.990 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:36:45.023 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:36:45.024 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 22:36:45.024 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 22:36:45.276  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a684433win with PID 6328 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:36:45.276 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:36:45.277  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-02 22:36:46.081  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 0.847 seconds (JVM running for 8.787)
2022-11-02 22:36:46.159 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:36:46.221  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:36:46.393 ERROR --- c.s.restService.TradeHistoryService      : No countries in the db with that id
2022-11-02 22:36:46.403 ERROR --- c.s.restService.TradeHistoryService      : mock exception
2022-11-02 22:36:46.424 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:36:46.440 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:36:46.441 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:36:46.444 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:36:46.447  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:36:46.509  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 6328 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:36:46.509 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:36:46.509  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 22:36:47.203  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 22:36:48.446  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51573 (http) with context path ''
2022-11-02 22:36:48.457  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 1.987 seconds (JVM running for 11.163)
2022-11-02 22:36:48.631 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:36:48.632 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:36:48.634 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:36:48.635  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:40:11.832 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:40:11.854 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:40:11.876 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:40:11.907 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:40:11.909 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 22:40:11.910 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 22:40:12.150  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a684433win with PID 2764 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:40:12.151 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:40:12.152  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-02 22:40:12.851  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 0.738 seconds (JVM running for 8.408)
2022-11-02 22:40:12.915 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:40:12.992  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:40:13.147 ERROR --- c.s.restService.TradeHistoryService      : No trade history in the db with that client id
2022-11-02 22:40:13.160 ERROR --- c.s.restService.TradeHistoryService      : mock exception
2022-11-02 22:40:13.181 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:40:13.188 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:40:13.189 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:40:13.190 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:40:13.191  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:40:13.260  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 2764 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:40:13.261 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:40:13.262  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 22:40:13.909  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 22:40:15.128  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51586 (http) with context path ''
2022-11-02 22:40:15.135  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 1.931 seconds (JVM running for 10.693)
2022-11-02 22:40:15.294 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:40:15.300 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:40:15.302 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:40:15.304  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:42:19.271 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:42:19.295 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:42:19.322 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:42:19.354 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:42:19.355 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 22:42:19.356 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 22:42:19.605  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a684433win with PID 5112 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:42:19.606 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:42:19.606  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-02 22:42:20.342  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 0.776 seconds (JVM running for 8.343)
2022-11-02 22:42:20.414 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:42:20.482  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:42:20.662 ERROR --- c.s.restService.TradeHistoryService      : No trade history in the db with that client id
2022-11-02 22:42:20.675 ERROR --- c.s.restService.TradeHistoryService      : mock exception
2022-11-02 22:42:20.700 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:42:20.709 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:42:20.711 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:42:20.712 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:42:20.713  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:42:20.766  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 5112 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:42:20.767 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:42:20.768  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 22:42:21.485  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 22:42:22.707  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51595 (http) with context path ''
2022-11-02 22:42:22.716  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 1.987 seconds (JVM running for 10.716)
2022-11-02 22:42:22.877 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:42:22.879 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:42:22.880 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:42:22.881  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:45:36.596 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:45:36.621 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 22:45:36.646 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 22:46:17.743 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:46:17.766 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:46:17.794 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:46:39.276 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:46:39.298 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 22:46:39.321 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 22:46:39.350 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:46:39.351 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:46:39.357 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:48:45.984  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 7880 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:48:45.986 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:48:45.986  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 22:48:48.307  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 22:48:51.194  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51616 (http) with context path ''
2022-11-02 22:48:51.213  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 5.74 seconds (JVM running for 7.088)
2022-11-02 22:48:52.221 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:48:52.247 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:48:52.277 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:48:52.280  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:51:15.116  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : Starting TradeHistoryServiceIntegrationTest using Java 17.0.1 on a684433win with PID 7344 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:51:15.117 DEBUG --- c.s.r.TradeHistoryServiceIntegrationTest : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:51:15.118  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : The following 1 profile is active: "dev"
2022-11-02 22:51:19.887  INFO --- c.s.r.TradeHistoryServiceIntegrationTest : Started TradeHistoryServiceIntegrationTest in 5.239 seconds (JVM running for 6.635)
2022-11-02 22:51:20.630 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:51:20.654 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:51:20.682 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:51:20.683  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:51:20.731 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:54:07.638  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a684433win with PID 7648 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:54:07.640 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:54:07.641  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-02 22:54:10.042  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 3.015 seconds (JVM running for 4.319)
2022-11-02 22:54:10.181  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:54:10.459 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:54:10.496 ERROR --- c.s.restService.TradeHistoryService      : No trade history in the db with that client id
2022-11-02 22:54:10.519 ERROR --- c.s.restService.TradeHistoryService      : mock exception
2022-11-02 22:54:35.389 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:54:35.414 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-02 22:54:35.438 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-02 22:54:35.463 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:54:35.464 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:54:35.469 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:54:35.703  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a684433win with PID 3668 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:54:35.703 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:54:35.703  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-02 22:54:36.408  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 0.744 seconds (JVM running for 8.268)
2022-11-02 22:54:36.506  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:54:36.690 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:54:36.713 ERROR --- c.s.restService.TradeHistoryService      : No trade history in the db with that client id
2022-11-02 22:54:36.723 ERROR --- c.s.restService.TradeHistoryService      : mock exception
2022-11-02 22:54:36.740 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:54:36.742 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:54:36.743 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:54:36.744  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-02 22:54:36.753 ERROR --- c.s.restService.TradeHistoryService      : negative id received
2022-11-02 22:54:36.822  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a684433win with PID 3668 (started by a684433 in D:\Team_Loki_Small_Change\Small-Change-Team-Loki\SmallChangeJava)
2022-11-02 22:54:36.824 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-02 22:54:36.824  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-02 22:54:37.485  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-02 22:54:38.724  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 51634 (http) with context path ''
2022-11-02 22:54:38.733  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 1.966 seconds (JVM running for 10.592)
2022-11-02 22:54:38.918 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-02 22:54:38.928 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-02 22:54:38.930 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-02 22:54:38.932  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
