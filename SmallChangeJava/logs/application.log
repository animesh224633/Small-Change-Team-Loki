2022-11-09 09:45:21.108  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 09:45:22.894  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 09:46:40.640 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 09:46:40.660 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 09:46:40.682 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 09:46:40.683  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 09:46:40.748 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:46:40.750 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 09:46:40.753 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 09:46:40.754  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:46:40.776 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:46:40.777 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 09:46:40.780 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 09:46:40.780  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:46:40.783 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 09:46:40.783 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 09:46:40.784 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 09:46:40.785  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 09:46:51.033 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 09:46:51.034 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 09:46:51.035 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 09:46:51.037  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:46:53.718 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 09:46:53.719 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 09:46:53.720 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 09:46:53.721  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:46:55.360 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 09:46:55.361 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: 1(String)
2022-11-09 09:46:55.364 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 2
2022-11-09 09:46:55.365  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:46:56.506 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 09:46:56.508 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 09:46:56.509 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 09:46:56.509  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:46:57.033 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 09:46:57.033 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 09:46:57.035 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 09:46:57.035  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:46:57.964 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 09:46:57.965 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 09:46:57.966 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 09:46:57.967  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:46:58.574 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 09:46:58.575 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: 1(String)
2022-11-09 09:46:58.577 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 2
2022-11-09 09:46:58.577  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:46:59.280 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 09:46:59.281 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 09:46:59.282 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 09:46:59.283  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:46:59.751 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 09:46:59.752 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 09:46:59.754 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 09:46:59.754  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:49:45.289 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 09:49:45.290 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 09:49:45.291 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:49:45.291 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 09:49:45.293  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 09:49:45.295 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 09:49:45.300 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 09:49:45.300  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:49:45.312 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:49:45.314 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 09:49:45.318 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 09:49:45.319  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:49:47.019 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 09:49:47.020 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 09:49:47.023 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 09:49:47.023  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:49:48.407 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 09:49:48.408 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 09:49:48.409 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 09:49:48.409  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:49:48.986 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 09:49:48.987 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: 1(String)
2022-11-09 09:49:48.988 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 2
2022-11-09 09:49:48.989  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:49:49.452 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 09:49:49.453 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 09:49:49.454 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 09:49:49.454  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:49:49.836 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 09:49:49.837 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 09:49:49.841 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 09:49:49.842  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:49:50.364 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 09:49:50.365 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: 1(String)
2022-11-09 09:49:50.366 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 2
2022-11-09 09:49:50.367  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:49:51.014 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 09:49:51.015 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 09:49:51.016 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 09:49:51.017  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:49:51.378 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 09:49:51.380 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 09:49:51.381 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 09:49:51.381  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:50:03.513 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 09:50:03.514 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 09:50:03.516 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 09:50:03.516  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:50:05.110 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 09:50:05.111 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 09:50:05.112 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 09:50:05.112  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 09:50:05.111 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:50:05.115 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 09:50:05.116 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 09:50:05.117  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:50:05.130 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:50:05.132 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 09:50:05.132 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 09:50:05.133  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:50:26.431 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 09:50:26.433 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: qq@gmail.com(String), teamloki(String)
2022-11-09 09:50:26.434 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 0
2022-11-09 09:50:26.434 ERROR --- c.s.r.ClientAuthenticationService        : Client Id and password do not match
2022-11-09 09:50:34.995 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==>  Preparing: insert into client(CLIENT_ID ,CLIENT_NAME ,CLIENT_MAIL ,CLIENT_SMALLCHANGE_WALLET ,PASSWORD ) values(?,?,?,?,?)
2022-11-09 09:50:34.996 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==> Parameters: bfc5db49-9981-4352-9f14-5c26eb295f0e(String), adwad(String), qqq@gmail.com(String), 0(BigDecimal), teamloki(String)
2022-11-09 09:50:34.997 DEBUG --- m.C.putRegistrationAuthenticationDetails : <==    Updates: 1
2022-11-09 09:50:34.998  INFO --- c.s.r.ClientAuthenticationService        : Successfully registered
2022-11-09 09:51:24.129 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==>  Preparing: insert into client(CLIENT_ID ,CLIENT_NAME ,CLIENT_MAIL ,CLIENT_SMALLCHANGE_WALLET ,PASSWORD ) values(?,?,?,?,?)
2022-11-09 09:51:24.130 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==> Parameters: 758adc70-674e-4fc2-b72e-5212abaefb18(String), adwads(String), qqq@gmail.com(String), 0(BigDecimal), teamloki(String)
2022-11-09 09:51:24.130 DEBUG --- m.C.putRegistrationAuthenticationDetails : <==    Updates: 1
2022-11-09 09:51:24.131  INFO --- c.s.r.ClientAuthenticationService        : Successfully registered
2022-11-09 09:53:40.061  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 09:53:41.872  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 09:54:20.893 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==>  Preparing: insert into client(CLIENT_ID ,CLIENT_NAME ,CLIENT_MAIL ,CLIENT_SMALLCHANGE_WALLET ,PASSWORD ) values(?,?,?,?,?)
2022-11-09 09:54:20.911 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==> Parameters: e96f745a-eee9-4e80-a693-7abe411f7e22(String), aa(String), teamloki@gmail.com(String), 0(BigDecimal), teamloki(String)
2022-11-09 09:54:20.912 DEBUG --- m.C.putRegistrationAuthenticationDetails : <==    Updates: 1
2022-11-09 09:54:20.913  INFO --- c.s.r.ClientAuthenticationService        : Successfully registered
2022-11-09 09:54:45.170 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 09:54:45.172 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 09:54:45.198 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 2
2022-11-09 09:54:45.205 ERROR --- c.s.r.ClientAuthenticationService        : nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
2022-11-09 09:56:14.997 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==>  Preparing: insert into client(CLIENT_ID ,CLIENT_NAME ,CLIENT_MAIL ,CLIENT_SMALLCHANGE_WALLET ,PASSWORD ) values(?,?,?,?,?)
2022-11-09 09:56:14.998 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==> Parameters: c424f66b-0e01-489b-9b58-118ade9df3cc(String), fdafaf(String), qq@gmail.com(String), 0(BigDecimal), teamloki(String)
2022-11-09 09:56:14.999 DEBUG --- m.C.putRegistrationAuthenticationDetails : <==    Updates: 1
2022-11-09 09:56:14.999  INFO --- c.s.r.ClientAuthenticationService        : Successfully registered
2022-11-09 09:56:19.884 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 09:56:19.886 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: qq@gmail.com(String), teamloki(String)
2022-11-09 09:56:19.887 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 09:56:19.888  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 09:56:19.928  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "c424f66b-0e01-489b-9b58-118ade9df3cc"]
2022-11-09 09:56:19.935 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:56:19.937 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: c424f66b-0e01-489b-9b58-118ade9df3cc(String)
2022-11-09 09:56:19.938 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 09:56:19.938  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:56:19.946 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:56:19.948 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: c424f66b-0e01-489b-9b58-118ade9df3cc(String)
2022-11-09 09:56:19.949 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 09:56:19.949  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:56:31.043 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 09:56:31.044 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: c424f66b-0e01-489b-9b58-118ade9df3cc(String)
2022-11-09 09:56:31.045 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 09:56:31.046  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:56:33.163 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 09:56:33.166 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: c424f66b-0e01-489b-9b58-118ade9df3cc(String)
2022-11-09 09:56:33.166 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 09:56:33.167  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:56:33.890 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 09:56:33.892 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: c424f66b-0e01-489b-9b58-118ade9df3cc(String)
2022-11-09 09:56:33.892 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 0
2022-11-09 09:56:33.893  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 09:56:35.884  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "c424f66b-0e01-489b-9b58-118ade9df3cc"]
2022-11-09 09:56:35.884 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:56:35.890 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: c424f66b-0e01-489b-9b58-118ade9df3cc(String)
2022-11-09 09:56:35.890 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 09:56:35.892  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:56:35.899 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:56:35.900 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: c424f66b-0e01-489b-9b58-118ade9df3cc(String)
2022-11-09 09:56:35.902 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 09:56:35.902  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:57:31.008  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 09:57:31.008 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:57:31.009 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 09:57:31.010 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 09:57:31.011  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:57:31.017 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:57:31.018 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 09:57:31.019 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 09:57:31.020  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:58:48.028  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 09:58:48.029 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:58:48.031 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 09:58:48.033 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 09:58:48.033  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:58:48.041 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:58:48.043 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 09:58:48.044 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 09:58:48.045  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:59:05.543  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 09:59:05.544 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:59:05.546 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 09:59:05.547 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 09:59:05.547  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:59:05.551 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:59:05.553 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 09:59:05.554 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 09:59:05.554  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:59:26.547 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 09:59:26.548 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: qq@gmail.com(String), teamloki(String)
2022-11-09 09:59:26.549 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 09:59:26.550  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 09:59:26.579  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "c424f66b-0e01-489b-9b58-118ade9df3cc"]
2022-11-09 09:59:26.579 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:59:26.581 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: c424f66b-0e01-489b-9b58-118ade9df3cc(String)
2022-11-09 09:59:26.582 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 09:59:26.582  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 09:59:26.591 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 09:59:26.592 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: c424f66b-0e01-489b-9b58-118ade9df3cc(String)
2022-11-09 09:59:26.593 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 09:59:26.593  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:00:07.551 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 10:00:07.552 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 10:00:07.553 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 2
2022-11-09 10:00:07.553 ERROR --- c.s.r.ClientAuthenticationService        : nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
2022-11-09 10:00:13.763 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 10:00:13.764 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 10:00:13.765 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 2
2022-11-09 10:00:13.765 ERROR --- c.s.r.ClientAuthenticationService        : nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
2022-11-09 10:00:29.722  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 10:00:31.484  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 10:00:31.741 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 10:00:31.759 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 10:00:31.779 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 10:00:31.781  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 10:00:31.951 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 10:00:31.952 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 10:00:31.953 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 10:00:31.954  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:00:31.972 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:00:31.975 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 10:00:31.977 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 10:00:31.978  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:00:32.005 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:00:32.009 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 10:00:32.015 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 10:00:32.016  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:01:15.959 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==>  Preparing: insert into client(CLIENT_ID ,CLIENT_NAME ,CLIENT_MAIL ,CLIENT_SMALLCHANGE_WALLET ,PASSWORD ) values(?,?,?,?,?)
2022-11-09 10:01:15.961 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==> Parameters: a04d9b85-acf2-4495-bc6c-f1779985c9c0(String), yugiug(String), teamloki2@gmail.com(String), 0(BigDecimal), teamloki2(String)
2022-11-09 10:01:15.962 DEBUG --- m.C.putRegistrationAuthenticationDetails : <==    Updates: 1
2022-11-09 10:01:15.963  INFO --- c.s.r.ClientAuthenticationService        : Successfully registered
2022-11-09 10:01:20.675 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 10:01:20.676 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki2@gmail.com(String), teamloki2(String)
2022-11-09 10:01:20.677 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 10:01:20.677  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 10:01:20.735 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:01:20.737 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: a04d9b85-acf2-4495-bc6c-f1779985c9c0(String)
2022-11-09 10:01:20.737  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "a04d9b85-acf2-4495-bc6c-f1779985c9c0"]
2022-11-09 10:01:20.738 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 10:01:20.738  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:01:20.747 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:01:20.749 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: a04d9b85-acf2-4495-bc6c-f1779985c9c0(String)
2022-11-09 10:01:20.751 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 10:01:20.752  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:05:28.283  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 10:05:28.296 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:05:28.297 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 10:05:28.297 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 10:05:28.298  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:05:28.320 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:05:28.322 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 10:05:28.323 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 10:05:28.324  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:06:13.462  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 10:06:13.472 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:06:13.475 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 10:06:13.475 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 10:06:13.477  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:06:13.486 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:06:13.487 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 10:06:13.487 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 10:06:13.488  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:15:46.031  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 10:15:46.031 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:15:46.033 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 10:15:46.034 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 10:15:46.035  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:15:46.040 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:15:46.041 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 10:15:46.042 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 10:15:46.043  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:18:51.346  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 10:18:53.152  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 10:18:53.315 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:18:53.352 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 10:18:53.381 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 10:18:53.383  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:20:19.294 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 10:20:19.295 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 10:20:19.296 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 10:20:19.297 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 10:20:19.299 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2844.6(Float), 1(String)
2022-11-09 10:20:19.301 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 10:20:19.302 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 10:20:19.303 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 10:20:19.304 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 10:20:19.305 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 10:20:19.306 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 100.50(BigDecimal), 16(Integer), 1(String), AMZN(String)
2022-11-09 10:20:19.307 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 10:20:19.307 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 10:20:19.308 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 100.50(BigDecimal), 1(String), AMZN(String), BUY(String), 9877hffu66686767dfesfsf87ufyfy4uyuef577(String), 16(Integer), 2019-03-29(LocalDate)
2022-11-09 10:20:19.309 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 10:20:29.742  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2022-11-09 10:20:34.252 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:20:34.254 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 10:20:34.256 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 10:20:34.256  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:26:10.834 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:26:10.836 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 10:26:10.838 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 10:26:10.839  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:26:25.138 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 10:26:25.139 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 10:26:25.141 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 10:26:25.142 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 10:26:25.143 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2744.6(Float), 1(String)
2022-11-09 10:26:25.144 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 10:26:25.145 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 10:26:25.145 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 10:26:25.147 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 10:26:25.147 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 10:26:25.148 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 620.85(BigDecimal), 2(Integer), 1(String), LMF(String)
2022-11-09 10:26:25.149 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 10:26:25.149 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 10:26:25.150 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 620.85(BigDecimal), 1(String), LMF(String), BUY(String), 9877hdfdfdffffu66686767dfesfsf87ufyfy4uyuef577(String), 2(Integer), 2019-03-29(LocalDate)
2022-11-09 10:26:25.151 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 10:26:30.833 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:26:30.835 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 10:26:30.837 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 10:26:30.837  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:30:04.683 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 10:30:04.685 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 10:30:04.686 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 10:30:04.687  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 10:30:04.775 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 10:30:04.777 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 10:30:04.779 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 10:30:04.781  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:30:04.791 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:30:04.792 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 10:30:04.794 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 10:30:04.794  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:30:04.859 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:30:04.863 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 10:30:04.865 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 10:30:04.866  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:30:28.477 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 10:30:28.478 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 10:30:28.479 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 2
2022-11-09 10:30:28.480  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:30:45.854 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 10:30:45.855 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 10:30:45.856 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 10:30:45.857 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 10:30:45.858 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 10:30:45.859 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 2
2022-11-09 10:30:45.861 DEBUG --- c.s.i.m.S.updateClientTable              : ==>  Preparing: update client set client_smallchange_wallet = ? where client_id = ?
2022-11-09 10:30:45.862 DEBUG --- c.s.i.m.S.updateClientTable              : ==> Parameters: 2767.60009765625000000000000000000000(BigDecimal), 1(String)
2022-11-09 10:30:45.863 DEBUG --- c.s.i.m.S.updateClientTable              : <==    Updates: 1
2022-11-09 10:30:45.864 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==>  Preparing: update client_finance_details set account_balance = ? where client_id = ? and account_number = ?
2022-11-09 10:30:45.865 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==> Parameters: 7753.99000000000000000000000000000000(BigDecimal), 1(String), IIGG776(String)
2022-11-09 10:30:45.866 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : <==    Updates: 1
2022-11-09 10:30:45.866  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:30:45.880 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 10:30:45.881 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 10:30:45.884 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 2
2022-11-09 10:30:45.885  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:31:05.461 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 10:31:05.462 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 10:31:05.464 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 10:31:05.465 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 10:31:05.465 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 10:31:05.466 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 2
2022-11-09 10:31:05.466 DEBUG --- c.s.i.m.S.updateClientTable              : ==>  Preparing: update client set client_smallchange_wallet = ? where client_id = ?
2022-11-09 10:31:05.467 DEBUG --- c.s.i.m.S.updateClientTable              : ==> Parameters: 3767.60009765625000000000000000000000(BigDecimal), 1(String)
2022-11-09 10:31:05.467 DEBUG --- c.s.i.m.S.updateClientTable              : <==    Updates: 1
2022-11-09 10:31:05.468 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==>  Preparing: update client_finance_details set account_balance = ? where client_id = ? and account_number = ?
2022-11-09 10:31:05.469 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==> Parameters: 6753.99000000000000000000000000000000(BigDecimal), 1(String), IIGG776(String)
2022-11-09 10:31:05.470 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : <==    Updates: 1
2022-11-09 10:31:05.470  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:31:05.483 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 10:31:05.484 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 10:31:05.485 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 2
2022-11-09 10:31:05.485  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:31:26.575 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 10:31:26.576 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 10:31:26.577 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 10:31:26.577 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 10:31:26.578 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 10:31:26.579 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 2
2022-11-09 10:31:26.579 DEBUG --- c.s.i.m.S.updateClientTable              : ==>  Preparing: update client set client_smallchange_wallet = ? where client_id = ?
2022-11-09 10:31:26.580 DEBUG --- c.s.i.m.S.updateClientTable              : ==> Parameters: 4767.60009765625000000000000000000000(BigDecimal), 1(String)
2022-11-09 10:31:26.580 DEBUG --- c.s.i.m.S.updateClientTable              : <==    Updates: 1
2022-11-09 10:31:26.581 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==>  Preparing: update client_finance_details set account_balance = ? where client_id = ? and account_number = ?
2022-11-09 10:31:26.582 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==> Parameters: 5753.99000000000000000000000000000000(BigDecimal), 1(String), IIGG776(String)
2022-11-09 10:31:26.583 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : <==    Updates: 1
2022-11-09 10:31:26.583  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:31:26.595 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 10:31:26.596 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 10:31:26.597 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 2
2022-11-09 10:31:26.598  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:31:39.111 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 10:31:39.111 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 10:31:39.113 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 2
2022-11-09 10:31:39.113  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:31:45.496 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 10:31:45.497 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 10:31:45.498 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 10:31:45.499 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 10:31:45.500 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 10:31:45.501 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 2
2022-11-09 10:31:45.502 DEBUG --- c.s.i.m.S.updateClientTable              : ==>  Preparing: update client set client_smallchange_wallet = ? where client_id = ?
2022-11-09 10:31:45.503 DEBUG --- c.s.i.m.S.updateClientTable              : ==> Parameters: 5767.60009765625000000000000000000000(BigDecimal), 1(String)
2022-11-09 10:31:45.503 DEBUG --- c.s.i.m.S.updateClientTable              : <==    Updates: 1
2022-11-09 10:31:45.503 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==>  Preparing: update client_finance_details set account_balance = ? where client_id = ? and account_number = ?
2022-11-09 10:31:45.504 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==> Parameters: 45644444.60000000000000000000000000000000(BigDecimal), 1(String), 122354D(String)
2022-11-09 10:31:45.504 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : <==    Updates: 1
2022-11-09 10:31:45.505  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:31:45.520 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 10:31:45.521 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 10:31:45.522 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 2
2022-11-09 10:31:45.522  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:31:53.058 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 10:31:53.060 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 10:31:53.061 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 4
2022-11-09 10:31:53.062  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 10:31:54.042 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 10:31:54.043 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 10:31:54.044 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 10:31:54.045  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:31:54.049 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:31:54.049 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 10:31:54.051 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 10:31:54.052  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:31:54.063 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:31:54.064 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 10:31:54.069 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 10:31:54.069  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:32:34.097 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 10:32:34.098 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 10:32:34.099 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 2
2022-11-09 10:32:34.100  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:32:39.084 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 10:32:39.085 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 10:32:39.086 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 2
2022-11-09 10:32:39.086  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:32:42.136 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 10:32:42.137 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 10:32:42.138 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 2
2022-11-09 10:32:42.138  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 10:41:04.120  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 10:41:05.916  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 10:41:27.111 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:41:27.129 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 10:41:27.151 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 10:41:27.153  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 10:41:59.381 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 10:41:59.382 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 10:41:59.383 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 10:41:59.384 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 10:41:59.386 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 3344.6(Float), 1(String)
2022-11-09 10:41:59.388 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 10:41:59.389 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 10:41:59.390 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 10:41:59.391 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 10:41:59.392 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 10:41:59.394 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 620.85(BigDecimal), 2(Integer), 1(String), LMF(String)
2022-11-09 10:41:59.394 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 10:41:59.395 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 10:41:59.396 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 620.85(BigDecimal), 1(String), LMF(String), BUY(String), 9877hdfyufydfdffffu66686767dfesfsf87ufyfy4uyuef577(String), 2(Integer), 2019-03-29(LocalDate)
2022-11-09 10:41:59.396 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 10:42:51.294 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 10:42:51.295 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 10:42:51.297 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 10:42:51.299  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 11:04:49.550  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 11:04:51.299  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 11:05:05.188 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:05:05.209 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:05:05.229 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:05:05.233 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:05:05.235 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2444.6(Float), 1(String)
2022-11-09 11:05:05.238 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 11:05:05.239 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:05:05.240 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:05:05.242 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:05:05.243 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 11:05:05.243 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), AMZN(String)
2022-11-09 11:05:05.245 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 11:05:05.247 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 11:05:05.248 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 125.35(BigDecimal), 20(Integer), 1(String), AMZN(String)
2022-11-09 11:05:05.249 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 11:05:05.250 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 11:05:05.251 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 125.35(BigDecimal), 1(String), AMZN(String), BUY(String), 98UFUU77hdfyufydfdffffu66686767dfesfsf87ufyfy4uyuef577(String), 20(Integer), 2019-03-29(LocalDate)
2022-11-09 11:05:05.251 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 11:05:21.485 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:05:21.486 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:05:21.487 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 11:05:21.487  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 11:07:26.885 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:07:26.887 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:07:26.889 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:07:26.889 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:07:26.891 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 1444.6(Float), 1(String)
2022-11-09 11:07:26.891 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 11:07:26.892 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:07:26.892 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:07:26.895 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:07:26.896 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 11:07:26.897 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: 2bc8217f-4019-4780-8538-3f4fd578689a(String), 100(BigDecimal), 1(String), APL(String), 10(Integer)
2022-11-09 11:07:26.897 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 11:07:26.898 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 11:07:26.898 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 100(BigDecimal), 1(String), APL(String), BUY(String), 98UFUUffi77hdfyufydfdffffu66686767dfesfsf87ufyfy4uyuef577(String), 10(Integer), 2019-03-29(LocalDate)
2022-11-09 11:07:26.899 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 11:07:34.061 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:07:34.065 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:07:34.073 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 3
2022-11-09 11:07:34.075  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 11:08:37.629 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:08:37.631 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:08:37.632 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:08:37.643 ERROR --- o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "java.math.BigDecimal.multiply(java.math.BigDecimal)" because the return value of "com.smallchange.uimodel.SellOrder.getSellPrice()" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.math.BigDecimal.multiply(java.math.BigDecimal)" because the return value of "com.smallchange.uimodel.SellOrder.getSellPrice()" is null
	at com.smallchange.integration.OrderDaoMyBatisImpl.putSellTrade(OrderDaoMyBatisImpl.java:176)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$FastClassBySpringCGLIB$$8f0a3bd1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$EnhancerBySpringCGLIB$$336a0e45.putSellTrade(<generated>)
	at com.smallchange.restService.OrderMapperService.queryPutSellTrade(OrderMapperService.java:99)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-11-09 11:09:01.082 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:09:01.083 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:09:01.083 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:09:01.084 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:09:01.085 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==> Parameters: 2044.6(Float), 1(String)
2022-11-09 11:09:01.087 DEBUG --- c.s.i.m.O.updateClientWalletSell         : <==    Updates: 1
2022-11-09 11:09:01.088 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:09:01.088 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:09:01.090 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 11:09:01.091 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==>  Preparing: Update holdings set quantity=? where client_id=? and code=?
2022-11-09 11:09:01.091 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==> Parameters: 4(Integer), 1(String), APL(String)
2022-11-09 11:09:01.091 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : <==    Updates: 1
2022-11-09 11:09:01.092 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 11:09:01.092 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==> Parameters: 100(BigDecimal), 1(String), APL(String), SELL(String), 98UFUUffi77uffuhdfyufydfdffffu66686767dfesfsf87ufyfy4uyuef577(String), 4(Integer), 2019-03-29(LocalDate)
2022-11-09 11:09:01.094 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : <==    Updates: 1
2022-11-09 11:09:11.725 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:09:11.727 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:09:11.729 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 3
2022-11-09 11:09:11.730  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 11:10:43.322 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:10:43.323 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:10:43.323 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:10:43.324 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:10:43.325 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==> Parameters: 2644.6(Float), 1(String)
2022-11-09 11:10:43.325 DEBUG --- c.s.i.m.O.updateClientWalletSell         : <==    Updates: 1
2022-11-09 11:10:43.326 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:10:43.326 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:10:43.327 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 11:10:43.328 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==>  Preparing: Update holdings set quantity=? where client_id=? and code=?
2022-11-09 11:10:43.328 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==> Parameters: -2(Integer), 1(String), APL(String)
2022-11-09 11:10:43.329 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : <==    Updates: 1
2022-11-09 11:10:43.329 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 11:10:43.330 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==> Parameters: 100(BigDecimal), 1(String), APL(String), SELL(String), 98UFUUffi77uffuhyfy4uyuef577(String), -2(Integer), 2019-03-29(LocalDate)
2022-11-09 11:10:43.330 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : <==    Updates: 1
2022-11-09 11:11:44.781 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:11:44.782 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:11:44.784 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 3
2022-11-09 11:11:44.785  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 11:15:57.967  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 11:15:59.802  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 11:20:46.043  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 11:20:47.801  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 11:21:52.889 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:21:52.907 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:21:52.926 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:21:52.929 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:21:52.932 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==> Parameters: 5444.6(Float), 1(String)
2022-11-09 11:21:52.934 DEBUG --- c.s.i.m.O.updateClientWalletSell         : <==    Updates: 1
2022-11-09 11:21:52.935 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:21:52.936 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:21:52.939 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:21:52.947 ERROR --- o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.smallchange.exception.InsufficientFundsException: You do not have enough holdings to execute this sell trade] with root cause
com.smallchange.exception.InsufficientFundsException: You do not have enough holdings to execute this sell trade
	at com.smallchange.integration.OrderDaoMyBatisImpl.putSellTrade(OrderDaoMyBatisImpl.java:204)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$FastClassBySpringCGLIB$$8f0a3bd1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$EnhancerBySpringCGLIB$$fdf193dc.putSellTrade(<generated>)
	at com.smallchange.restService.OrderMapperService.queryPutSellTrade(OrderMapperService.java:99)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-11-09 11:22:44.076 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:22:44.078 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:22:44.079 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:22:44.080 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:22:44.081 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==> Parameters: 7444.6(Float), 1(String)
2022-11-09 11:22:44.082 DEBUG --- c.s.i.m.O.updateClientWalletSell         : <==    Updates: 1
2022-11-09 11:22:44.083 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:22:44.084 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:22:44.086 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:22:44.086 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 11:22:44.087 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==> Parameters: 100(BigDecimal), 1(String), APLJYC(String), SELL(String), 98UFUUffi77uffuhyURYUfy4uyuef577(String), 20(Integer), 2019-03-29(LocalDate)
2022-11-09 11:22:44.149 ERROR --- o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: foreign key no parent; SYS_FK_10104 table: ORDERS value: APLJYC
### The error may exist in com/smallchange/integration/mapper/OrderMapper.java (best guess)
### The error may involve com.smallchange.integration.mapper.OrderMapper.putSellTradeOrder-Inline
### The error occurred while setting parameters
### SQL: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: foreign key no parent; SYS_FK_10104 table: ORDERS value: APLJYC
; integrity constraint violation: foreign key no parent; SYS_FK_10104 table: ORDERS value: APLJYC; nested exception is java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: foreign key no parent; SYS_FK_10104 table: ORDERS value: APLJYC] with root cause
org.hsqldb.HsqlException: integrity constraint violation: foreign key no parent; SYS_FK_10104 table: ORDERS value: APLJYC
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.Constraint.checkInsert(Unknown Source)
	at org.hsqldb.StatementDML.performIntegrityChecks(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.execute(Unknown Source)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at jdk.proxy2/jdk.proxy2.$Proxy76.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy2/jdk.proxy2.$Proxy78.putSellTradeOrder(Unknown Source)
	at com.smallchange.integration.OrderDaoMyBatisImpl.putSellTrade(OrderDaoMyBatisImpl.java:234)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$FastClassBySpringCGLIB$$8f0a3bd1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$EnhancerBySpringCGLIB$$fdf193dc.putSellTrade(<generated>)
	at com.smallchange.restService.OrderMapperService.queryPutSellTrade(OrderMapperService.java:99)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-11-09 11:24:35.547 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:24:35.577 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-09 11:24:35.603 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 11:24:35.632 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:24:35.635 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 11:24:35.640 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 11:24:35.720 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:24:35.724 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:24:35.730 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 11:24:35.753 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:24:35.756 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:24:35.779 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 11:24:35.907 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 11:24:35.911 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 11:24:35.914 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 11:24:35.952 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:24:35.955 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:24:35.957 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:24:35.959 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:24:35.962 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2004.6(Float), 1(String)
2022-11-09 11:24:35.967 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 11:24:35.976 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:24:35.977 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:24:35.980 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:24:35.986 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 11:24:35.988 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: 8c849de6-c89f-407b-9915-d6230d1942ae(String), 240.00(BigDecimal), 1(String), SBIMF(String), 6(Integer)
2022-11-09 11:24:35.990 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 11:24:35.991 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 11:24:35.995 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 240.00(BigDecimal), 1(String), SBIMF(String), buy(String), 748192f5-da05-4cfa-968f-91e38cbd3f72(String), 6(Integer), 2022-11-09(LocalDate)
2022-11-09 11:24:35.996 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 11:24:36.011 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:24:36.012 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:24:36.013 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:24:36.014 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:24:36.018 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2004.6(Float), 1(String)
2022-11-09 11:24:36.019 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 11:24:36.021 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:24:36.027 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:24:36.034 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:24:36.039 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 11:24:36.041 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: 514a87eb-848f-49ba-8318-db8e0c692fa6(String), 240.00(BigDecimal), 1(String), APL(String), 6(Integer)
2022-11-09 11:24:36.043 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 11:24:36.046 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 11:24:36.048 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 240.00(BigDecimal), 1(String), APL(String), buy(String), 784198c3-291e-4767-a936-40f7109be140(String), 6(Integer), 2022-11-09(LocalDate)
2022-11-09 11:24:36.048 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 11:24:36.063 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:24:36.067 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:24:36.086 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:24:36.501  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a683691win with PID 7712 (started by a683691 in C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava)
2022-11-09 11:24:36.501 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-09 11:24:36.502  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-09 11:24:37.341  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 0.887 seconds (JVM running for 10.471)
2022-11-09 11:24:37.436  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:24:37.667  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:24:37.688  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:24:37.714 ERROR --- c.s.restService.TradeHistoryService      : mock exception
2022-11-09 11:24:37.772 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:24:37.779 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 11:24:37.781 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 11:24:37.781  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:24:37.799 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:24:37.800 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 0(String)
2022-11-09 11:24:37.801 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 11:24:37.801  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:24:37.860  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a683691win with PID 7712 (started by a683691 in C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava)
2022-11-09 11:24:37.861 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-09 11:24:37.861  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-09 11:24:38.652  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-09 11:24:40.039  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 63818 (http) with context path ''
2022-11-09 11:24:40.048  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 2.231 seconds (JVM running for 13.178)
2022-11-09 11:24:40.240 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:24:40.245 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 11:24:40.247 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 11:24:40.249  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:27:07.723 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 11:27:07.750 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 11:27:07.780 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 11:27:07.827 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:27:07.830 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:27:07.831 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:27:07.834 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:27:07.837 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2004.6(Float), 1(String)
2022-11-09 11:27:07.841 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 11:27:07.843 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:27:07.844 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:27:07.847 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:27:07.852 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 11:27:07.854 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: ce414cde-b254-4e1e-9a24-4140b25ae469(String), 240.00(BigDecimal), 1(String), SBIMF(String), 6(Integer)
2022-11-09 11:27:07.854 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 11:27:07.855 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 11:27:07.857 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 240.00(BigDecimal), 1(String), SBIMF(String), buy(String), 2ff675d3-738a-4115-9dd6-0bcbb24cd12d(String), 6(Integer), 2022-11-09(LocalDate)
2022-11-09 11:27:07.857 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 11:27:07.867 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:27:07.868 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:27:07.869 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:27:07.871 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:27:07.872 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2004.6(Float), 1(String)
2022-11-09 11:27:07.872 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 11:27:07.873 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:27:07.874 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:27:07.877 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:27:07.879 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 11:27:07.880 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: 6906d1f5-c111-4150-a620-eeb8725a0c7f(String), 240.00(BigDecimal), 1(String), APL(String), 6(Integer)
2022-11-09 11:27:07.881 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 11:27:07.881 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 11:27:07.884 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 240.00(BigDecimal), 1(String), APL(String), buy(String), 0cf88c6c-8165-4720-9e03-caee15546cc1(String), 6(Integer), 2022-11-09(LocalDate)
2022-11-09 11:27:07.885 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 11:27:07.895 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:27:07.896 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:27:07.898 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:27:31.386 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:27:31.418 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-09 11:27:31.445 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 11:27:31.473 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:27:31.475 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 11:27:31.480 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 11:27:31.522 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:27:31.524 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:27:31.527 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 11:27:31.542 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:27:31.545 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:27:31.547 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 11:27:31.597 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 11:27:31.598 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 11:27:31.600 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 11:27:31.625 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:27:31.626 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:27:31.628 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:27:31.631 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:27:31.633 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2004.6(Float), 1(String)
2022-11-09 11:27:31.641 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 11:27:31.643 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:27:31.645 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:27:31.647 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:27:31.658 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 11:27:31.659 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: f35316cf-9929-4687-bf07-b9610e473389(String), 240.00(BigDecimal), 1(String), SBIMF(String), 6(Integer)
2022-11-09 11:27:31.660 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 11:27:31.660 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 11:27:31.663 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 240.00(BigDecimal), 1(String), SBIMF(String), buy(String), 5c88e275-61df-48b9-874d-ea0fc496ceab(String), 6(Integer), 2022-11-09(LocalDate)
2022-11-09 11:27:31.663 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 11:27:31.678 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:27:31.680 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:27:31.681 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:27:31.682 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:27:31.683 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2004.6(Float), 1(String)
2022-11-09 11:27:31.684 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 11:27:31.685 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:27:31.686 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:27:31.689 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:27:31.690 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 11:27:31.691 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: f988cde9-76e8-4161-9905-ec44594a2564(String), 240.00(BigDecimal), 1(String), APL(String), 6(Integer)
2022-11-09 11:27:31.691 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 11:27:31.692 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 11:27:31.693 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 240.00(BigDecimal), 1(String), APL(String), buy(String), d7f052e3-85a4-4230-bbdf-8d28f87e2e0a(String), 6(Integer), 2022-11-09(LocalDate)
2022-11-09 11:27:31.694 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 11:27:31.705 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:27:31.708 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:27:31.710 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:27:32.070  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a683691win with PID 7928 (started by a683691 in C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava)
2022-11-09 11:27:32.070 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-09 11:27:32.071  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-09 11:27:32.871  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 0.842 seconds (JVM running for 9.794)
2022-11-09 11:27:32.971  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:27:33.183  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:27:33.202  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:27:33.220 ERROR --- c.s.restService.TradeHistoryService      : mock exception
2022-11-09 11:27:33.255 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:27:33.257 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 11:27:33.257 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 11:27:33.258  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:27:33.271 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:27:33.272 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 0(String)
2022-11-09 11:27:33.272 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 11:27:33.273  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:27:33.373  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a683691win with PID 7928 (started by a683691 in C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava)
2022-11-09 11:27:33.373 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-09 11:27:33.373  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-09 11:27:34.143  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-09 11:27:35.844  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 63846 (http) with context path ''
2022-11-09 11:27:35.854  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 2.559 seconds (JVM running for 12.778)
2022-11-09 11:27:36.049 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:27:36.049 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 11:27:36.050 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 11:27:36.051  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:32:17.771 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 11:32:17.772 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 11:32:17.772 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 11:32:17.773  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 11:32:17.820 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:32:17.821 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 11:32:17.823 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 11:32:17.821 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:32:17.825 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 11:32:17.825  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 11:32:17.827 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 11:32:17.827  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 11:32:17.843 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:32:17.844 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:32:17.846 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 11:32:17.846  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 11:32:31.289 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 11:32:31.289 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:32:31.290 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 11:32:31.290 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 11:32:31.290 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:32:31.292  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 11:32:31.295 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 11:32:31.296  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 11:32:31.304 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:32:31.307 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:32:31.309 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 11:32:31.309  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 11:51:17.468 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:51:17.497 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-09 11:51:17.560 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 11:51:17.601 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:51:17.603 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 11:51:17.614 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 11:51:17.659 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:51:17.660 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:51:17.663 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 11:51:17.677 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 11:51:17.678 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 11:51:17.683 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 11:51:17.726 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 11:51:17.727 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 11:51:17.729 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 11:51:17.746 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:51:17.748 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:51:17.750 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:51:17.752 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:51:17.755 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2004.6(Float), 1(String)
2022-11-09 11:51:17.761 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 11:51:17.762 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:51:17.772 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:51:17.775 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:51:17.780 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 11:51:17.782 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: 4a640333-f01d-4680-8c96-a4372e68bea4(String), 240.00(BigDecimal), 1(String), SBIMF(String), 6(Integer)
2022-11-09 11:51:17.783 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 11:51:17.784 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 11:51:17.792 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 240.00(BigDecimal), 1(String), SBIMF(String), buy(String), 0860db9c-8362-45cc-8bb4-2313c9bd3164(String), 6(Integer), 2022-11-09(LocalDate)
2022-11-09 11:51:17.792 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 11:51:17.807 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 11:51:17.813 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 11:51:17.815 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 11:51:17.825 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 11:51:17.862 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2004.6(Float), 1(String)
2022-11-09 11:51:17.863 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 11:51:17.864 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:51:17.869 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:51:17.871 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:51:17.872 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 11:51:17.873 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: e95d8601-14d5-4ac1-91ce-31b5c1be70d3(String), 240.00(BigDecimal), 1(String), APL(String), 6(Integer)
2022-11-09 11:51:17.874 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 11:51:17.875 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 11:51:17.875 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 240.00(BigDecimal), 1(String), APL(String), buy(String), a852e5c1-9099-4893-b27f-f991dbfa2b8f(String), 6(Integer), 2022-11-09(LocalDate)
2022-11-09 11:51:17.884 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 11:51:17.956 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 11:51:17.960 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 11:51:17.972 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 11:51:18.604  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a683691win with PID 8988 (started by a683691 in C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava)
2022-11-09 11:51:18.604 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-09 11:51:18.605  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-09 11:51:19.823  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 1.342 seconds (JVM running for 11.717)
2022-11-09 11:51:19.951  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:51:20.189  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:51:20.202  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:51:20.222 ERROR --- c.s.restService.TradeHistoryService      : mock exception
2022-11-09 11:51:20.256 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:51:20.258 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 11:51:20.259 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 11:51:20.260  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:51:20.273 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:51:20.274 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 0(String)
2022-11-09 11:51:20.274 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 11:51:20.275  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 11:51:20.347  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a683691win with PID 8988 (started by a683691 in C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava)
2022-11-09 11:51:20.348 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-09 11:51:20.348  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-09 11:51:21.585  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-09 11:51:23.511  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 64064 (http) with context path ''
2022-11-09 11:51:23.521  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 3.225 seconds (JVM running for 15.414)
2022-11-09 11:51:23.713 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 11:51:23.714 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 11:51:23.716 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 11:51:23.717  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 12:14:08.841 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 12:14:08.844 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 12:14:08.846 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 12:14:08.846  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 12:14:13.164 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 12:14:13.165 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 12:14:13.167 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 12:14:13.167  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 12:14:13.205 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 12:14:13.205 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 12:14:13.206 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 12:14:13.207 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 12:14:13.209 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 12:14:13.207 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 12:14:13.210  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 12:14:13.210  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 12:14:13.223 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 12:14:13.225 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 12:14:13.227 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 12:14:13.228  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 12:14:15.800 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:14:15.801 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:14:15.802 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:14:15.803  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:19:09.087 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:19:09.088 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:19:09.090 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:19:09.090  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:22:18.546 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:22:18.547 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:22:18.549 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:22:18.550  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:25:43.989 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:25:43.991 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:25:43.991  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 12:25:43.994 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:25:43.996  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:25:53.483 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 12:25:53.485 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 12:25:53.485 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 12:25:53.486  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 12:25:53.527 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 12:25:53.528 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 12:25:53.529 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 12:25:53.530  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 12:25:53.530 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 12:25:53.533 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 12:25:53.538 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 12:25:53.539  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 12:25:53.551 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 12:25:53.552 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 12:25:53.554 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 12:25:53.555  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 12:25:56.827 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 12:25:56.828 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 12:25:56.830 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 12:25:56.831  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 12:25:56.835 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:25:56.836 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:25:56.837 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:25:56.838  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:27:27.944 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 12:27:27.946 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 12:27:27.947 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 12:27:27.947 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:27:27.949  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 12:27:27.949 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:27:27.950 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:27:27.951  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:27:33.766 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 12:27:33.767 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 12:27:33.768 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 12:27:33.769  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 12:27:33.770 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:27:33.770 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:27:33.771 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:27:33.772  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:27:39.954 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 12:27:39.955 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 12:27:39.956 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 12:27:39.957 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:27:39.957 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:27:39.958 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:27:39.959  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:27:39.957  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 12:27:41.088 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 12:27:41.089 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 12:27:41.089 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:27:41.090 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:27:41.091 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:27:41.092  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:27:41.093 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 12:27:41.094  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 12:28:05.603 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 12:28:05.604 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 12:28:05.606 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 12:28:05.607  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 12:28:05.616 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:28:05.617 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:28:05.619 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:28:05.620  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:28:06.979 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 12:28:06.981 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 12:28:06.981 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 12:28:06.982  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 12:28:06.982 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:28:06.983 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:28:06.984 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:28:06.985  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:28:07.977 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 12:28:07.978 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 12:28:07.979 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 12:28:07.979 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:28:07.980  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 12:28:07.980 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:28:07.982 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:28:07.982  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:28:09.728 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 12:28:09.730 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 12:28:09.732 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 12:28:09.733  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 12:28:09.737 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:28:09.738 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:28:09.741 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:28:09.742  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:28:21.094 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 12:28:21.095 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:28:21.095 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:28:21.095 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 12:28:21.097 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:28:21.097 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 12:28:21.097  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 12:28:21.097  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 12:54:28.961 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 12:54:28.962 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 12:54:28.963 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 12:54:28.964 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 12:54:28.965 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 7244.6(Float), 1(String)
2022-11-09 12:54:28.965 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 12:54:28.966 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 12:54:28.967 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 12:54:28.968 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 12:54:28.969 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 12:54:28.970 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), AMZN(String)
2022-11-09 12:54:28.972 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 12:54:28.973 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 12:54:28.974 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 142.25(BigDecimal), 12(Integer), 1(String), AMZN(String)
2022-11-09 12:54:28.974 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 12:54:28.975 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 12:54:28.975 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 142.25(BigDecimal), 1(String), AMZN(String), BUY(String), 98UFdfdefUUffi77uffuhyURYUfy4uyuef577(String), 12(Integer), 2019-03-29(LocalDate)
2022-11-09 12:54:28.976 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 12:54:47.849 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 12:54:47.874 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 99(String)
2022-11-09 12:54:47.897 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 12:54:47.929 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 12:54:47.931 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 12:54:47.936 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 12:54:47.972 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 12:54:47.975 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 12:54:47.978 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 12:54:48.000 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 12:54:48.004 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 12:54:48.011 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 12:54:48.068 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 12:54:48.070 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 12:54:48.072 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 12:54:48.098 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 12:54:48.100 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 12:54:48.101 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 12:54:48.104 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 12:54:48.110 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2004.6(Float), 1(String)
2022-11-09 12:54:48.112 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 12:54:48.113 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 12:54:48.115 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 12:54:48.116 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 12:54:48.118 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 12:54:48.119 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: 29600c62-9f42-4d0c-8c00-22fd0a817a87(String), 240.00(BigDecimal), 1(String), SBIMF(String), 6(Integer)
2022-11-09 12:54:48.119 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 12:54:48.120 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 12:54:48.121 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 240.00(BigDecimal), 1(String), SBIMF(String), buy(String), dad18273-e2e4-4e8c-b351-e775ada6a1a0(String), 6(Integer), 2022-11-09(LocalDate)
2022-11-09 12:54:48.121 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 12:54:48.130 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 12:54:48.131 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 12:54:48.132 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 12:54:48.132 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 12:54:48.133 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2004.6(Float), 1(String)
2022-11-09 12:54:48.134 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 12:54:48.134 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 12:54:48.135 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 12:54:48.138 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 12:54:48.139 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 12:54:48.140 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: 1ff88afc-e110-4eb2-950b-0c9669e1a3d3(String), 240.00(BigDecimal), 1(String), APL(String), 6(Integer)
2022-11-09 12:54:48.140 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 12:54:48.141 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 12:54:48.142 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 240.00(BigDecimal), 1(String), APL(String), buy(String), 5340b00b-d95f-47a2-a5e3-6d53879fd18c(String), 6(Integer), 2022-11-09(LocalDate)
2022-11-09 12:54:48.143 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 12:54:48.157 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 12:54:48.159 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 12:54:48.161 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 12:54:48.527  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Starting TradeHistoryServiceWebLayerTest using Java 17.0.1 on a683691win with PID 2512 (started by a683691 in C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava)
2022-11-09 12:54:48.528 DEBUG --- c.s.r.TradeHistoryServiceWebLayerTest    : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-09 12:54:48.530  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : The following 1 profile is active: "dev"
2022-11-09 12:54:49.362  INFO --- c.s.r.TradeHistoryServiceWebLayerTest    : Started TradeHistoryServiceWebLayerTest in 0.917 seconds (JVM running for 9.704)
2022-11-09 12:54:49.484  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 12:54:49.670  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 12:54:49.686  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 12:54:49.702 ERROR --- c.s.restService.TradeHistoryService      : mock exception
2022-11-09 12:54:49.741 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 12:54:49.742 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 12:54:49.744 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 12:54:49.744  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 12:54:49.756 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 12:54:49.758 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 0(String)
2022-11-09 12:54:49.758 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 12:54:49.759  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 12:54:49.832  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Starting TradeHistoryServiceE2ETest using Java 17.0.1 on a683691win with PID 2512 (started by a683691 in C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava)
2022-11-09 12:54:49.832 DEBUG --- c.s.r.TradeHistoryServiceE2ETest         : Running with Spring Boot v2.6.7, Spring v5.3.19
2022-11-09 12:54:49.832  INFO --- c.s.r.TradeHistoryServiceE2ETest         : The following 1 profile is active: "dev"
2022-11-09 12:54:50.866  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 0 (http)
2022-11-09 12:54:52.244  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 50177 (http) with context path ''
2022-11-09 12:54:52.256  INFO --- c.s.r.TradeHistoryServiceE2ETest         : Started TradeHistoryServiceE2ETest in 2.475 seconds (JVM running for 12.598)
2022-11-09 12:54:52.436 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 12:54:52.437 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 12:54:52.439 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 12:54:52.440  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 12:55:03.947  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 12:55:05.712  WARN --- ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2022-11-09 12:55:05.761 ERROR --- o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2022-11-09 12:55:37.744  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 12:55:39.482  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 12:55:42.515 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 12:55:42.532 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 12:55:42.557 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 12:55:42.561 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 12:55:42.564 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 3244.6(Float), 1(String)
2022-11-09 12:55:42.565 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 12:55:42.566 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 12:55:42.567 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 12:55:42.569 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 12:55:42.569 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 12:55:42.570 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), AMZN(String)
2022-11-09 12:55:42.572 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 12:55:42.573 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 12:55:42.573 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 142.25(BigDecimal), 12(Integer), 1(String), AMZN(String)
2022-11-09 12:55:42.574 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 12:55:42.575 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 12:55:42.576 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 142.25(BigDecimal), 1(String), AMZN(String), BUY(String), 98UFdfdefUUffi77uffuhyURYUfy4uyuef577(String), 12(Integer), 2019-03-29(LocalDate)
2022-11-09 12:55:42.576 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 13:32:33.652  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 13:32:33.689 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 13:32:33.690 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 13:32:33.691 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 13:32:33.692  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 13:34:21.865 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 13:34:21.866 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 13:34:21.867 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 13:34:21.868  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 13:34:21.925 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 13:34:21.926 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 13:34:21.928 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 13:34:21.929  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 13:34:21.929 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 13:34:21.931 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 13:34:21.933 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 13:34:21.934  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 13:34:21.948 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 13:34:21.949 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 13:34:21.951 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 13:34:21.952  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 13:34:24.959 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 13:34:24.961 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 13:34:24.962 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 13:34:24.963  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 13:34:24.966 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 13:34:24.967 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 13:34:24.968 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 13:34:24.969  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 13:35:09.797 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 13:35:09.799 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 13:35:09.800 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 13:35:09.802 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 13:35:09.802 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2638.1(Float), 1(String)
2022-11-09 13:35:09.804 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 13:35:09.804 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 13:35:09.807 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 13:35:09.809 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 13:35:09.811 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 13:35:09.811 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: e26adda6-75a1-44e0-8d84-b383adcb0c3d(String), 121.3(BigDecimal), 1(String), APL(String), 5(Integer)
2022-11-09 13:35:09.812 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 13:35:09.812 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 13:35:09.813 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 121.3(BigDecimal), 1(String), APL(String), BUY(String), null(String), 5(Integer), 1995-12-16(LocalDate)
2022-11-09 13:35:09.813 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 13:35:48.797 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 13:35:48.799 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 13:35:48.800 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 3
2022-11-09 13:35:48.801  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 13:36:07.747 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 13:36:07.749 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 13:36:07.751 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 13:36:07.751 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 13:36:07.753 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 1546.4(Float), 1(String)
2022-11-09 13:36:07.754 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 13:36:07.754 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 13:36:07.755 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 13:36:07.757 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 13:36:07.758 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 13:36:07.759 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), APL(String)
2022-11-09 13:36:07.764 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 13:36:07.766 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 13:36:07.767 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 121.30(BigDecimal), 14(Integer), 1(String), APL(String)
2022-11-09 13:36:07.767 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 13:36:07.767 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 13:36:07.768 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 121.30(BigDecimal), 1(String), APL(String), BUY(String), null(String), 14(Integer), 1995-12-16(LocalDate)
2022-11-09 13:36:07.847 ERROR --- o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10103 table: ORDERS
### The error may exist in com/smallchange/integration/mapper/OrderMapper.java (best guess)
### The error may involve com.smallchange.integration.mapper.OrderMapper.putBuyTradeOrder-Inline
### The error occurred while setting parameters
### SQL: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10103 table: ORDERS
; integrity constraint violation: unique constraint or index violation; SYS_PK_10103 table: ORDERS; nested exception is java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10103 table: ORDERS] with root cause
org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10103 table: ORDERS
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.execute(Unknown Source)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at jdk.proxy2/jdk.proxy2.$Proxy76.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy2/jdk.proxy2.$Proxy78.putBuyTradeOrder(Unknown Source)
	at com.smallchange.integration.OrderDaoMyBatisImpl.putBuyTrade(OrderDaoMyBatisImpl.java:143)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$FastClassBySpringCGLIB$$8f0a3bd1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$EnhancerBySpringCGLIB$$3bd301dc.putBuyTrade(<generated>)
	at com.smallchange.restService.OrderMapperService.queryPutBuyTrade(OrderMapperService.java:92)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-11-09 13:36:12.008 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 13:36:12.009 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 13:36:12.011 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 3
2022-11-09 13:36:12.012  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 13:37:58.023 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 13:37:58.024 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 13:37:58.026 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 4
2022-11-09 13:37:58.026  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 13:38:36.293  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 13:38:38.045  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 13:39:10.976  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 13:39:11.007 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 13:39:11.038 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 13:39:11.072 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 13:39:11.074  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 13:39:19.383 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 13:39:19.384 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 13:39:19.385 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 13:39:19.385  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 13:39:19.437 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 13:39:19.438 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 13:39:19.439 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 13:39:19.440 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 13:39:19.440  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 13:39:19.441 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 13:39:19.445 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 13:39:19.445  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 13:39:19.455 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 13:39:19.456 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 13:39:19.459 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 13:39:19.459  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 13:39:21.599 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 13:39:21.600 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 13:39:21.602 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 13:39:21.602  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 13:39:21.618 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 13:39:21.620 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 13:39:21.621 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 13:39:21.623  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 13:39:25.336 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 13:39:25.337 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 13:39:25.338 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 13:39:25.338  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 13:39:46.313 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 13:39:46.314 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 13:39:46.315 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 13:39:46.317 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 13:39:46.319 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 3323.3(Float), 1(String)
2022-11-09 13:39:46.322 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 13:39:46.322 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 13:39:46.323 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 13:39:46.324 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 13:39:46.325 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 13:39:46.325 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: 5dc214e6-1a5a-4527-aaf7-0b96d0d65444(String), 121.3(BigDecimal), 1(String), APL(String), 1(Integer)
2022-11-09 13:39:46.326 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 13:39:46.326 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 13:39:46.328 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 121.3(BigDecimal), 1(String), APL(String), BUY(String), null(String), 1(Integer), 1995-12-16(LocalDate)
2022-11-09 13:39:46.328 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 13:39:58.344 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 13:39:58.345 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 13:39:58.347 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 3
2022-11-09 13:39:58.347  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 13:40:34.635 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 13:40:34.636 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 13:40:34.637 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 13:40:34.638 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 13:40:34.640 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 3202.0(Float), 1(String)
2022-11-09 13:40:34.641 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 13:40:34.642 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 13:40:34.643 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 13:40:34.645 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 13:40:34.646 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 13:40:34.647 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), APL(String)
2022-11-09 13:40:34.649 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 13:40:34.650 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 13:40:34.651 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 121.30(BigDecimal), 2(Integer), 1(String), APL(String)
2022-11-09 13:40:34.652 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 13:40:34.652 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 13:40:34.653 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 121.30(BigDecimal), 1(String), APL(String), BUY(String), null(String), 2(Integer), 1995-12-16(LocalDate)
2022-11-09 13:40:34.727 ERROR --- o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10103 table: ORDERS
### The error may exist in com/smallchange/integration/mapper/OrderMapper.java (best guess)
### The error may involve com.smallchange.integration.mapper.OrderMapper.putBuyTradeOrder-Inline
### The error occurred while setting parameters
### SQL: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10103 table: ORDERS
; integrity constraint violation: unique constraint or index violation; SYS_PK_10103 table: ORDERS; nested exception is java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10103 table: ORDERS] with root cause
org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10103 table: ORDERS
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.execute(Unknown Source)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy109.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at jdk.proxy2/jdk.proxy2.$Proxy76.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy2/jdk.proxy2.$Proxy78.putBuyTradeOrder(Unknown Source)
	at com.smallchange.integration.OrderDaoMyBatisImpl.putBuyTrade(OrderDaoMyBatisImpl.java:143)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$FastClassBySpringCGLIB$$8f0a3bd1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$EnhancerBySpringCGLIB$$edcf51cf.putBuyTrade(<generated>)
	at com.smallchange.restService.OrderMapperService.queryPutBuyTrade(OrderMapperService.java:92)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-11-09 13:40:38.565 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 13:40:38.566 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 13:40:38.568 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 3
2022-11-09 13:40:38.568  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 13:40:52.368 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 13:40:52.369 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 13:40:52.373 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 3
2022-11-09 13:40:52.374  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 14:09:22.874  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 14:09:22.882 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 14:09:22.883 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 14:09:22.884 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 14:09:22.885  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 14:12:28.462  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 14:12:28.476 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 14:12:28.477 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 14:12:28.481 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 14:12:28.481  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 14:36:59.660  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 14:36:59.665 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 14:36:59.667 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 14:36:59.668 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 14:36:59.669  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 14:36:59.674 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 14:36:59.674 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 14:36:59.676 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 14:36:59.676  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 14:37:51.227  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 14:37:51.233 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 14:37:51.234 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 14:37:51.236 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 14:37:51.236  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 14:37:51.241 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 14:37:51.242 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 14:37:51.244 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 14:37:51.244  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 14:37:57.162  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 14:37:57.171 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 14:37:57.173 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 14:37:57.174 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 14:37:57.174 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 14:37:57.175  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 14:37:57.175 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 14:37:57.179 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 14:37:57.179  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 14:50:35.671  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 14:50:35.674 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 14:50:35.675 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 14:50:35.677 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 14:50:35.678  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 14:50:35.686 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 14:50:35.687 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 14:50:35.690 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 14:50:35.690  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 14:51:09.591  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 14:51:09.599 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 14:51:09.603 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 14:51:09.605 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 14:51:09.605  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 14:51:09.611 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 14:51:09.612 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 14:51:09.613 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 14:51:09.613  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 14:51:33.312  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 14:51:33.316 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 14:51:33.317 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 14:51:33.318 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 14:51:33.319  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 14:51:33.327 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 14:51:33.328 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 14:51:33.329 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 14:51:33.329  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:02:16.627  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 15:02:16.629 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:02:16.630 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:02:16.632 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:02:16.632  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:02:16.650 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:02:16.651 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:02:16.652 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 15:02:16.653  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:03:03.356  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 15:03:03.357 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:03:03.358 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:03:03.359 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:03:03.359 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:03:03.360  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:03:03.360 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:03:03.363 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 15:03:03.363  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:03:12.550  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 15:03:14.387  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 15:05:29.260  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 15:05:30.995  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 15:05:41.015  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 15:05:41.042 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:05:41.043 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:05:41.076 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:05:41.077 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:05:41.111 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:05:41.112 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:05:41.113  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:05:41.113  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:06:07.649 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 15:06:07.651 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 15:06:07.652 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 15:06:07.653  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 15:06:07.711 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:06:07.712 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:06:07.713 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:06:07.713 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:06:07.714 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:06:07.715  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:06:07.716 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:06:07.717  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:06:07.729 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:06:07.731 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:06:07.733 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:06:07.734  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:06:14.679 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:06:14.681 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:06:14.682 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:06:14.682  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:06:14.688 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:06:14.690 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:06:14.691 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:06:14.691  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:06:14.701 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:06:14.702 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:06:14.705 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:06:14.705  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:06:50.689 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:06:50.690 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:06:50.691 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:06:50.692  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:06:50.696 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:06:50.697 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:06:50.699 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:06:50.699  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:06:51.634 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:06:51.636 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:06:51.637 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:06:51.637  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:06:51.638 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:06:51.638 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:06:51.641 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:06:51.642  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:07:41.415  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 15:07:41.429 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:07:41.431 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:07:41.432 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:07:41.432  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:07:41.433 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:07:41.433 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:07:41.435 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:07:41.436  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:07:52.025 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 15:07:52.027 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 15:07:52.029 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 15:07:52.030  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 15:07:52.078 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:07:52.079 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:07:52.079 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:07:52.080 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:07:52.080 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:07:52.081  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:07:52.082 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:07:52.082  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:07:52.092 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:07:52.093 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:07:52.095 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:07:52.095  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:07:55.140 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:07:55.141 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:07:55.142 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:07:55.143  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:07:55.144 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:07:55.145 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:07:55.146 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:07:55.147  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:07:55.158 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:07:55.159 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:07:55.161 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:07:55.161  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:08:51.167 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 15:08:51.168 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 15:08:51.169 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 15:08:51.170 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 15:08:51.175 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==> Parameters: 3747.0(Float), 1(String)
2022-11-09 15:08:51.177 DEBUG --- c.s.i.m.O.updateClientWalletSell         : <==    Updates: 1
2022-11-09 15:08:51.178 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:08:51.179 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:08:51.180 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:08:51.185 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==>  Preparing: Update holdings set quantity=? where client_id=? and code=?
2022-11-09 15:08:51.186 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==> Parameters: 7(Integer), 1(String), AMZN(String)
2022-11-09 15:08:51.186 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : <==    Updates: 1
2022-11-09 15:08:51.186 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 15:08:51.187 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==> Parameters: 100.8(BigDecimal), 1(String), AMZN(String), SELL(String), bd24a3a1-5500-45db-aa97-7b235ba4e160(String), 7(Integer), 2022-11-09(LocalDate)
2022-11-09 15:08:51.187 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : <==    Updates: 1
2022-11-09 15:08:58.882 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:08:58.883 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:08:58.883 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:08:58.884  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:08:58.890 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:08:58.892 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:08:58.893 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:08:58.894  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:08:58.913 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:08:58.913 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:08:58.915 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:08:58.915  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:09:12.966 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:09:12.967 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:09:12.969 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:09:12.969  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:09:12.972 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:09:12.973 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:09:12.974 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:09:12.976  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:09:12.982 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:09:12.983 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:09:12.987 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:09:12.988  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:09:21.594 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 15:09:21.595 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 15:09:21.596 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 15:09:21.596 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 15:09:21.597 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 3343.8(Float), 1(String)
2022-11-09 15:09:21.598 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 15:09:21.598 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:09:21.599 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:09:21.600 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:09:21.601 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 15:09:21.601 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), AMZN(String)
2022-11-09 15:09:21.604 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 15:09:21.605 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 15:09:21.606 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 132.55(BigDecimal), 11(Integer), 1(String), AMZN(String)
2022-11-09 15:09:21.607 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 15:09:21.608 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 15:09:21.608 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 132.55(BigDecimal), 1(String), AMZN(String), BUY(String), 21e1f8ed-5753-49f5-880a-1588a98d1a9f(String), 11(Integer), 2022-11-09(LocalDate)
2022-11-09 15:09:21.609 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 15:09:49.687 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:09:49.688 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:09:49.689 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:09:49.690  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:09:49.695 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:09:49.696 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:09:49.697 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:09:49.698  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:09:49.712 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:09:49.714 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:09:49.718 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:09:49.720  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:10:01.852 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:10:01.854 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:10:01.854 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:10:01.855  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:10:01.858 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:10:01.858 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:10:01.859 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:10:01.860  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:10:01.869 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:10:01.870 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:10:01.871 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:10:01.872  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:10:38.081 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:10:38.082 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:10:38.085 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:10:38.086 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:10:38.086  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:10:38.086 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:10:38.089 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:10:38.089  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:10:50.436 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 15:10:50.437 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 15:10:50.438 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 15:10:50.439 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 15:10:50.439 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2450.2(Float), 1(String)
2022-11-09 15:10:50.440 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 15:10:50.440 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:10:50.441 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:10:50.442 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:10:50.443 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 15:10:50.444 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: 9c740014-db75-43d9-9b0e-44a40c7eb0f2(String), 111.7(BigDecimal), 1(String), SBIMF(String), 8(Integer)
2022-11-09 15:10:50.444 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 15:10:50.445 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 15:10:50.445 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 111.7(BigDecimal), 1(String), SBIMF(String), BUY(String), 051d68a8-4c41-4ccf-bb2e-e7df12d6973e(String), 8(Integer), 2022-11-09(LocalDate)
2022-11-09 15:10:50.446 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 15:10:57.698 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:10:57.699 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:10:57.699 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:10:57.700  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:10:57.703 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:10:57.704 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:10:57.712 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 3
2022-11-09 15:10:57.715  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:10:57.729 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:10:57.730 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:10:57.734 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 3
2022-11-09 15:10:57.734  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:11:18.404 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:11:18.405 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:11:18.406 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:11:18.407  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:11:18.413 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:11:18.414 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:11:18.414 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:11:18.415 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:11:18.416 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 15:11:18.417  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:11:18.417 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:11:18.419  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:11:24.287 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:11:24.288 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:11:24.289 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 15:11:24.290  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:11:31.261 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 15:11:31.262 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 15:11:31.263 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 15:11:31.264 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 15:11:31.265 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==> Parameters: 3343.8(Float), 1(String)
2022-11-09 15:11:31.265 DEBUG --- c.s.i.m.O.updateClientWalletSell         : <==    Updates: 1
2022-11-09 15:11:31.266 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:11:31.266 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:11:31.268 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 4
2022-11-09 15:11:31.269 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==>  Preparing: Update holdings set quantity=? where client_id=? and code=?
2022-11-09 15:11:31.269 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==> Parameters: 0(Integer), 1(String), SBIMF(String)
2022-11-09 15:11:31.269 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : <==    Updates: 1
2022-11-09 15:11:31.270 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 15:11:31.270 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==> Parameters: 111.7(BigDecimal), 1(String), SBIMF(String), SELL(String), fa728ef8-cac7-44a7-a0ab-62a93c1bb315(String), 0(Integer), 2022-11-09(LocalDate)
2022-11-09 15:11:31.271 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : <==    Updates: 1
2022-11-09 15:11:38.079 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:11:38.080 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:11:38.081 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:11:38.081  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:11:38.083 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:11:38.085 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:11:38.166 ERROR --- c.s.restService.PortfolioService         : 
### Error querying database.  Cause: java.sql.SQLDataException: data exception: division by zero
### The error may exist in file [C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\PortfolioMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT I.NAME, I.CODE,   I.CURRENT_PRICE,   I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS   CURRENT_VALUE,   H.QUANTITY*H.BUYPRICE AS   INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE))   AS PROFIT_OR_LOSS,   ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100   AS PERCENTAGE_CAHNGE   FROM holdings H   JOIN instrument I   ON h.code=i.code   WHERE H.CLIENT_ID=?
### Cause: java.sql.SQLDataException: data exception: division by zero
; data exception: division by zero; nested exception is java.sql.SQLDataException: data exception: division by zero
2022-11-09 15:11:38.178 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:11:38.180 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:11:38.182 ERROR --- c.s.restService.PortfolioService         : 
### Error querying database.  Cause: java.sql.SQLDataException: data exception: division by zero
### The error may exist in file [C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\PortfolioMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT I.NAME, I.CODE,   I.CURRENT_PRICE,   I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS   CURRENT_VALUE,   H.QUANTITY*H.BUYPRICE AS   INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE))   AS PROFIT_OR_LOSS,   ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100   AS PERCENTAGE_CAHNGE   FROM holdings H   JOIN instrument I   ON h.code=i.code   WHERE H.CLIENT_ID=?
### Cause: java.sql.SQLDataException: data exception: division by zero
; data exception: division by zero; nested exception is java.sql.SQLDataException: data exception: division by zero
2022-11-09 15:12:48.607  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 15:12:48.611 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:12:48.612 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 15:12:48.613 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 15:12:48.614  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:12:48.623 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:12:48.624 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 15:12:48.625 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 15:12:48.625  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:12:54.749  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 15:12:54.754 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:12:54.756 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 15:12:54.756 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 15:12:54.756  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:12:54.778 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:12:54.780 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 15:12:54.780 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 15:12:54.780  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:13:24.841 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 15:13:24.841 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 15:13:24.842 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 15:13:24.842  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 15:13:24.885 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:13:24.887 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:13:24.888 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:13:24.889  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:13:24.890 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:13:24.891 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:13:24.892 ERROR --- c.s.restService.PortfolioService         : 
### Error querying database.  Cause: java.sql.SQLDataException: data exception: division by zero
### The error may exist in file [C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\PortfolioMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT I.NAME, I.CODE,   I.CURRENT_PRICE,   I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS   CURRENT_VALUE,   H.QUANTITY*H.BUYPRICE AS   INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE))   AS PROFIT_OR_LOSS,   ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100   AS PERCENTAGE_CAHNGE   FROM holdings H   JOIN instrument I   ON h.code=i.code   WHERE H.CLIENT_ID=?
### Cause: java.sql.SQLDataException: data exception: division by zero
; data exception: division by zero; nested exception is java.sql.SQLDataException: data exception: division by zero
2022-11-09 15:13:24.901 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:13:24.902 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:13:24.904 ERROR --- c.s.restService.PortfolioService         : 
### Error querying database.  Cause: java.sql.SQLDataException: data exception: division by zero
### The error may exist in file [C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\PortfolioMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT I.NAME, I.CODE,   I.CURRENT_PRICE,   I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS   CURRENT_VALUE,   H.QUANTITY*H.BUYPRICE AS   INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE))   AS PROFIT_OR_LOSS,   ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100   AS PERCENTAGE_CAHNGE   FROM holdings H   JOIN instrument I   ON h.code=i.code   WHERE H.CLIENT_ID=?
### Cause: java.sql.SQLDataException: data exception: division by zero
; data exception: division by zero; nested exception is java.sql.SQLDataException: data exception: division by zero
2022-11-09 15:15:14.979  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 15:15:16.745  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 15:17:36.345 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 15:17:36.364 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 15:17:36.385 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 15:17:36.387  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 15:17:36.567 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:17:36.568 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:17:36.568 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:17:36.569 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:17:36.570 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:17:36.570  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:17:36.571 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:17:36.572  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:17:36.595 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:17:36.597 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:17:36.603 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:17:36.605  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:17:47.771 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:17:47.772 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:17:47.774 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:17:47.774  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:17:47.786 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:17:47.787 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:17:47.791 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:17:47.792  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:17:47.797 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:17:47.799 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:17:47.800 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:17:47.801  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:20:09.008 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:20:09.011 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:20:09.013 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:20:09.014  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:20:09.026 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:20:09.027 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:20:09.029 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:20:09.030  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:20:09.353  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 15:20:15.396 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 15:20:15.398 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 15:20:15.398 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 15:20:15.399  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 15:20:15.447 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:20:15.449 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:20:15.450 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:20:15.451  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:20:15.452 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:20:15.453 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:20:15.454 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:20:15.455  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:20:15.467 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:20:15.469 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:20:15.470 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:20:15.470  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:20:18.933 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:20:18.934 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:20:18.936 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:20:18.936  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:20:18.938 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:20:18.940 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:20:18.943 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:20:18.943  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:20:18.995 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:20:18.999 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:20:19.002 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:20:19.004  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:20:36.567  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 15:20:36.573 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:20:36.574 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:20:36.577 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:20:36.577  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:20:36.584 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:20:36.584 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:20:36.586 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:20:36.586  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:20:42.324 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 15:20:42.325 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 15:20:42.326 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 15:20:42.327  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 15:20:42.370 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:20:42.371 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:20:42.372 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:20:42.372 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:20:42.372  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:20:42.373 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:20:42.375 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:20:42.375  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:20:42.385 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:20:42.386 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:20:42.388 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:20:42.388  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:21:52.054 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:21:52.055 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:21:52.055 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:21:52.055 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:21:52.056 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:21:52.057  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:21:52.055 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:21:52.060  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:21:52.068 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:21:52.069 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:21:52.071 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:21:52.071  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:23:11.408 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:23:11.410 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:23:11.412 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:23:11.412 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:23:11.413 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:23:11.413 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:23:11.414  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:23:11.414  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:23:11.423 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:23:11.423 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:23:11.428 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:23:11.428  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:23:17.494 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 15:23:17.495 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 15:23:17.496 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 15:23:17.497  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 15:23:19.452 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 15:23:19.454 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 15:23:19.455 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 15:23:19.455  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 15:23:20.271 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 15:23:20.273 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: 1(String)
2022-11-09 15:23:20.274 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 2
2022-11-09 15:23:20.275  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 15:23:21.462 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 15:23:21.463 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 15:23:21.464 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 15:23:21.464  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 15:23:21.925 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 15:23:21.926 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 15:23:21.927 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 15:23:21.927  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 15:23:22.343 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 15:23:22.344 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 15:23:22.345 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 15:23:22.345  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 15:23:22.678 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 15:23:22.679 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: 1(String)
2022-11-09 15:23:22.679 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 2
2022-11-09 15:23:22.680  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 15:23:23.008 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 15:23:23.009 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 15:23:23.010 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 15:23:23.010  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 15:23:23.292 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 15:23:23.294 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 15:23:23.294 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 15:23:23.294  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 15:23:24.373 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:23:24.375 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:23:24.376 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:23:24.376  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:23:24.378 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:23:24.379 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:23:24.380 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:23:24.380  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:23:24.381 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:23:24.382 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:23:24.387 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:23:24.388  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:23:44.122 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 15:23:44.124 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 15:23:44.124 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 15:23:44.125 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 15:23:44.128 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2537.4(Float), 1(String)
2022-11-09 15:23:44.130 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 15:23:44.130 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:23:44.131 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:23:44.132 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:23:44.132 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 15:23:44.133 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), AMZN(String)
2022-11-09 15:23:44.136 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 15:23:44.140 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 15:23:44.141 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 127.06(BigDecimal), 19(Integer), 1(String), AMZN(String)
2022-11-09 15:23:44.141 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 15:23:44.142 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 15:23:44.142 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 127.06(BigDecimal), 1(String), AMZN(String), BUY(String), 31f5fec4-41aa-438d-b654-de8e8214db63(String), 19(Integer), 2022-11-09(LocalDate)
2022-11-09 15:23:44.143 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 15:23:47.564 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:23:47.565 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:23:47.566 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:23:47.567  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:23:47.575 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:23:47.576 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:23:47.578 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:23:47.578  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:23:47.597 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:23:47.598 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:23:47.601 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:23:47.603  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:24:00.688 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 15:24:00.690 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 15:24:00.691 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 3
2022-11-09 15:24:00.692  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 15:35:46.047  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 15:35:48.106  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 15:35:58.218 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 15:35:58.236 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 15:35:58.257 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 15:35:58.258  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 15:35:58.345 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:35:58.346 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:35:58.347 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:35:58.348  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:35:58.351 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:35:58.352 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:35:58.357 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:35:58.357  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:35:58.377 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:35:58.379 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:35:58.382 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:35:58.384  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:36:05.762 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 15:36:05.764 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 15:36:05.767 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 15:36:05.768  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 15:36:09.205 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 15:36:09.206 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 15:36:09.207 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 15:36:09.208  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 15:36:09.213 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 15:36:09.217 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 15:36:09.221 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 15:36:09.221  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:36:09.226 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:36:09.227 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:36:09.230 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:36:09.230  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 15:36:17.095 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 15:36:17.096 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 15:36:17.098 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 15:36:17.099 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 15:36:17.101 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2537.4(Float), 1(String)
2022-11-09 15:36:17.104 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 15:36:17.105 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:36:17.105 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:36:17.108 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:36:17.109 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 15:36:17.109 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), AMZN(String)
2022-11-09 15:36:17.112 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 15:36:17.142 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 15:36:17.144 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 127.06(BigDecimal), 19(Integer), 1(String), AMZN(String)
2022-11-09 15:36:17.145 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 15:36:17.146 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 15:36:17.147 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 127.06(BigDecimal), 1(String), AMZN(String), BUY(String), 4688b33e-9057-4742-9cc5-0a056be7cdf8(String), 9(Integer), 2022-11-09(LocalDate)
2022-11-09 15:36:17.147 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 15:36:24.045 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 15:36:24.046 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 15:36:24.048 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 3
2022-11-09 15:36:24.049  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 15:54:20.860  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 15:54:22.971  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 15:56:38.000  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String "3": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '3' could not be parsed at index 0; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDate` from String "3": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '3' could not be parsed at index 0<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 7, column: 19] (through reference chain: com.smallchange.uimodel.BuyOrder["timestamp"])]
2022-11-09 15:57:12.412 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 15:57:12.432 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 15:57:12.452 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 15:57:12.455 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 15:57:12.459 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 3244.6(Float), 1(String)
2022-11-09 15:57:12.461 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 15:57:12.462 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:57:12.463 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:57:12.465 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:57:12.466 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 15:57:12.466 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), AMZN(String)
2022-11-09 15:57:12.469 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 15:57:12.474 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 15:57:12.475 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 142.25(BigDecimal), 12(Integer), 1(String), AMZN(String)
2022-11-09 15:57:12.476 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 15:57:12.477 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 15:57:12.477 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 142.25(BigDecimal), 1(String), AMZN(String), BUY(String), 9be1cbef-f06e-4687-8224-8d455d8766c0(String), 2(Integer), 2022-11-09(LocalDate)
2022-11-09 15:57:12.478 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 15:58:15.586 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 15:58:15.588 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 15:58:15.589 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 3
2022-11-09 15:58:15.590  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 15:58:45.022 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:58:45.024 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:58:45.026 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:58:45.027  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:58:53.312 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 15:58:53.313 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 15:58:53.315 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 15:58:53.315 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 15:58:53.316 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 3044.6(Float), 1(String)
2022-11-09 15:58:53.316 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 15:58:53.317 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:58:53.318 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:58:53.319 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:58:53.320 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 15:58:53.320 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), AMZN(String)
2022-11-09 15:58:53.321 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 15:58:53.322 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 15:58:53.322 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 136.21(BigDecimal), 14(Integer), 1(String), AMZN(String)
2022-11-09 15:58:53.323 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 15:58:53.323 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 15:58:53.324 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 136.21(BigDecimal), 1(String), AMZN(String), BUY(String), 2a619b6f-104b-4e35-a325-88bc77d85ad8(String), 2(Integer), 2022-11-09(LocalDate)
2022-11-09 15:58:53.325 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 15:58:55.611 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 15:58:55.612 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 15:58:55.613 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 15:58:55.613 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 15:58:55.615 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2844.6(Float), 1(String)
2022-11-09 15:58:55.616 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 15:58:55.616 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 15:58:55.617 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 15:58:55.618 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 15:58:55.619 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 15:58:55.619 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), AMZN(String)
2022-11-09 15:58:55.620 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 15:58:55.621 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 15:58:55.621 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 131.68(BigDecimal), 16(Integer), 1(String), AMZN(String)
2022-11-09 15:58:55.622 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 15:58:55.622 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 15:58:55.623 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 131.68(BigDecimal), 1(String), AMZN(String), BUY(String), 8c1de4b8-75fb-48a0-b380-0749327cf30d(String), 2(Integer), 2022-11-09(LocalDate)
2022-11-09 15:58:55.624 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 15:58:59.893 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 15:58:59.894 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 15:58:59.895 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 15:58:59.895  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 15:59:08.345 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 15:59:08.347 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 15:59:08.351 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 5
2022-11-09 15:59:08.352  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:00:16.375 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 16:00:16.376 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 16:00:16.377 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 16:00:16.378 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 16:00:16.378 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==> Parameters: 3144.6(Float), 1(String)
2022-11-09 16:00:16.378 DEBUG --- c.s.i.m.O.updateClientWalletSell         : <==    Updates: 1
2022-11-09 16:00:16.379 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 16:00:16.380 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 16:00:16.381 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 16:00:16.382 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==>  Preparing: Update holdings set quantity=? where client_id=? and code=?
2022-11-09 16:00:16.382 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==> Parameters: 13(Integer), 1(String), AMZN(String)
2022-11-09 16:00:16.383 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : <==    Updates: 1
2022-11-09 16:00:16.383 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 16:00:16.384 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==> Parameters: 100(BigDecimal), 1(String), AMZN(String), SELL(String), e75d204c-8ca6-4b4f-9ec8-082d823551c6(String), 3(Integer), 2022-11-09(LocalDate)
2022-11-09 16:00:16.384 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : <==    Updates: 1
2022-11-09 16:00:19.936 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:00:19.937 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:00:19.939 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:00:19.940  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:00:23.201 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:00:23.202 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:00:23.203 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 6
2022-11-09 16:00:23.204  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:00:43.943 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 16:00:43.943 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 16:00:43.944 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 16:00:43.945 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 16:00:43.946 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==> Parameters: 3444.6(Float), 1(String)
2022-11-09 16:00:43.947 DEBUG --- c.s.i.m.O.updateClientWalletSell         : <==    Updates: 1
2022-11-09 16:00:43.947 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 16:00:43.948 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 16:00:43.949 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 16:00:43.950 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==>  Preparing: Update holdings set quantity=? where client_id=? and code=?
2022-11-09 16:00:43.951 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==> Parameters: 10(Integer), 1(String), AMZN(String)
2022-11-09 16:00:43.951 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : <==    Updates: 1
2022-11-09 16:00:43.951 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 16:00:43.952 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==> Parameters: 100(BigDecimal), 1(String), AMZN(String), SELL(String), baf00d6b-a325-48ea-bc4d-b3907c5aa947(String), 3(Integer), 2022-11-09(LocalDate)
2022-11-09 16:00:43.952 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : <==    Updates: 1
2022-11-09 16:00:48.387 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:00:48.388 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:00:48.389 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:00:48.389  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:01:17.031 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 16:01:17.032 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 16:01:17.032 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 16:01:17.033 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 16:01:17.034 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 1944.6(Float), 1(String)
2022-11-09 16:01:17.035 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 16:01:17.035 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 16:01:17.036 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 16:01:17.039 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 16:01:17.039 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 16:01:17.040 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), AMZN(String)
2022-11-09 16:01:17.041 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 16:01:17.041 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 16:01:17.043 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 140.84(BigDecimal), 20(Integer), 1(String), AMZN(String)
2022-11-09 16:01:17.043 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 16:01:17.043 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 16:01:17.044 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 140.84(BigDecimal), 1(String), AMZN(String), BUY(String), 2bf73043-120e-4ce7-b524-1aee593e75fe(String), 10(Integer), 2022-11-09(LocalDate)
2022-11-09 16:01:17.044 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 16:01:20.147 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:01:20.148 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:01:20.149 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:01:20.150  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:01:40.355 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 16:01:40.356 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 16:01:40.357 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 16:01:40.358  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 16:01:40.414 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:01:40.415 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:01:40.416 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:01:40.416 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:01:40.417  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:01:40.418 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:01:40.419 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:01:40.419  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:01:40.433 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:01:40.435 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:01:40.436 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:01:40.437  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:02:47.424 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:02:47.425 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:02:47.426 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 16:02:47.427 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 16:02:47.428 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 16:02:47.429  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:02:47.426 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:02:47.439  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:02:47.446 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 16:02:47.447 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 16:02:47.449 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 16:02:47.449  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:03:06.619 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 16:03:06.620 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 16:03:06.621 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 16:03:06.622 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 16:03:06.622 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==> Parameters: 2952.6(Float), 1(String)
2022-11-09 16:03:06.623 DEBUG --- c.s.i.m.O.updateClientWalletSell         : <==    Updates: 1
2022-11-09 16:03:06.623 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 16:03:06.624 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 16:03:06.625 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 16:03:06.626 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==>  Preparing: Update holdings set quantity=? where client_id=? and code=?
2022-11-09 16:03:06.626 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==> Parameters: 10(Integer), 1(String), AMZN(String)
2022-11-09 16:03:06.627 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : <==    Updates: 1
2022-11-09 16:03:06.627 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 16:03:06.628 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==> Parameters: 100.8(BigDecimal), 1(String), AMZN(String), SELL(String), f2b667ce-bd7d-4a17-9bfd-0ab9c22a09ba(String), 10(Integer), 2022-11-09(LocalDate)
2022-11-09 16:03:06.629 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : <==    Updates: 1
2022-11-09 16:03:10.710 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:03:10.711 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:03:10.712 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:03:10.713  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:03:10.720 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:03:10.722 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:03:10.727 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:03:10.727  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:03:10.742 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:03:10.743 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:03:10.745 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:03:10.745  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:03:15.356 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:03:15.357 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:03:15.363 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 9
2022-11-09 16:03:15.364  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:03:24.958 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 16:03:24.959 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 16:03:24.960 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 3
2022-11-09 16:03:24.960  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:03:27.417 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 16:03:27.417 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: 1(String)
2022-11-09 16:03:27.419 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 6
2022-11-09 16:03:27.419  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:03:31.068 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:03:31.069 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:03:31.070 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:03:31.070  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:03:31.075 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 16:03:31.076 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 16:03:31.077 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 16:03:31.077  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:03:31.081 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code
2022-11-09 16:03:31.082 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 
2022-11-09 16:03:31.082 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 16:03:31.082  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:28:04.977 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 16:28:04.978  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 16:28:04.979 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 16:28:04.980 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 16:28:04.981  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:28:21.396  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 16:28:23.163  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 16:28:33.864 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 16:28:33.885 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 16:28:33.910 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 16:28:33.912  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 16:28:33.986 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:28:33.987 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:28:33.987 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:28:33.989 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:28:33.989 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:28:33.990  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:28:33.991 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:28:33.992  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:28:34.012 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:28:34.015 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:28:34.018 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:28:34.019  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:28:37.859 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:28:37.860 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:28:37.871 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 16:28:37.871 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 16:28:37.874 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:28:37.875 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 16:28:37.875  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:28:37.876  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:28:37.890 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 16:28:37.891 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 16:28:37.894 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 2
2022-11-09 16:28:37.894  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:29:00.266 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 16:29:00.267 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 16:29:00.269 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 16:29:00.270 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 16:29:00.272 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==> Parameters: 4351.8(Float), 1(String)
2022-11-09 16:29:00.274 DEBUG --- c.s.i.m.O.updateClientWalletSell         : <==    Updates: 1
2022-11-09 16:29:00.275 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 16:29:00.276 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 16:29:00.277 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 2
2022-11-09 16:29:00.283 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==>  Preparing: Update holdings set quantity=? where client_id=? and code=?
2022-11-09 16:29:00.285 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==> Parameters: 1(Integer), 1(String), AMZN(String)
2022-11-09 16:29:00.286 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : <==    Updates: 1
2022-11-09 16:29:00.286 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 16:29:00.288 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==> Parameters: 100.8(BigDecimal), 1(String), AMZN(String), SELL(String), 5b3f3b49-c08a-4fc6-aeb1-0c8586f3d2b6(String), 9(Integer), 2022-11-09(LocalDate)
2022-11-09 16:29:00.288 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : <==    Updates: 1
2022-11-09 16:29:03.091 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:29:03.093 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:29:03.093 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 3
2022-11-09 16:29:03.094  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:29:06.277 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:29:06.279 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:29:06.280 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:29:06.281  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:29:06.288 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:29:06.289 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:29:06.292 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:29:06.293  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:29:06.303 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:29:06.305 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:29:06.309 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:29:06.310  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:29:11.723 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:29:11.725 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:29:11.726 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 3
2022-11-09 16:29:11.727  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:29:12.042 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:29:12.043 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:29:12.045 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:29:12.048  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:29:12.047 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 16:29:12.053 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 16:29:12.056 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 16:29:12.058  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:29:12.070 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 16:29:12.071 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 16:29:12.072 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 2
2022-11-09 16:29:12.072  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:29:26.221 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 16:29:26.222 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 16:29:26.223 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 16:29:26.224 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 16:29:26.225 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 3260.1(Float), 1(String)
2022-11-09 16:29:26.225 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 16:29:26.226 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 16:29:26.227 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 16:29:26.228 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 2
2022-11-09 16:29:26.228 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 16:29:26.229 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: 51b2571d-7ca7-41b4-bf73-7a2a5d0c38f7(String), 121.3(BigDecimal), 1(String), APL(String), 9(Integer)
2022-11-09 16:29:26.229 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 16:29:26.230 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 16:29:26.231 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 121.3(BigDecimal), 1(String), APL(String), BUY(String), afc43904-2d33-484e-8cd9-3bf83da496a7(String), 9(Integer), 2022-11-09(LocalDate)
2022-11-09 16:29:26.231 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 16:29:31.884 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:29:31.885 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:29:31.886 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:29:31.887  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:29:31.893 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:29:31.894 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:29:31.895 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 3
2022-11-09 16:29:31.897  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:29:31.905 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:29:31.906 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:29:31.908 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 3
2022-11-09 16:29:31.908  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:29:35.616 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:29:35.618 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:29:35.621 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 4
2022-11-09 16:29:35.622  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:29:37.890 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:29:37.891 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:29:37.892 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:29:37.892  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:29:37.897 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 16:29:37.898 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 16:29:37.899 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 16:29:37.901  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:29:37.906 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 16:29:37.909 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 16:29:37.912 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 16:29:37.912  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:29:47.085 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 16:29:47.086 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 16:29:47.087 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 16:29:47.088 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 16:29:47.089 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==> Parameters: 4351.8(Float), 1(String)
2022-11-09 16:29:47.089 DEBUG --- c.s.i.m.O.updateClientWalletSell         : <==    Updates: 1
2022-11-09 16:29:47.090 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 16:29:47.091 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 16:29:47.092 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 3
2022-11-09 16:29:47.093 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==>  Preparing: Update holdings set quantity=? where client_id=? and code=?
2022-11-09 16:29:47.094 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==> Parameters: 0(Integer), 1(String), APL(String)
2022-11-09 16:29:47.094 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : <==    Updates: 1
2022-11-09 16:29:47.094 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 16:29:47.095 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==> Parameters: 121.3(BigDecimal), 1(String), APL(String), SELL(String), 2f3d5265-bcaa-4b14-924d-35690d6de356(String), 9(Integer), 2022-11-09(LocalDate)
2022-11-09 16:29:47.095 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : <==    Updates: 1
2022-11-09 16:29:55.560 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:29:55.561 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:29:55.562 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:29:55.562  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:29:55.573 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:29:55.574 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:29:55.659 ERROR --- c.s.restService.PortfolioService         : 
### Error querying database.  Cause: java.sql.SQLDataException: data exception: division by zero
### The error may exist in file [C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\PortfolioMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT I.NAME, I.CODE,   I.CURRENT_PRICE,   I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS   CURRENT_VALUE,   H.QUANTITY*H.BUYPRICE AS   INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE))   AS PROFIT_OR_LOSS,   ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100   AS PERCENTAGE_CAHNGE   FROM holdings H   JOIN instrument I   ON h.code=i.code   WHERE H.CLIENT_ID=?
### Cause: java.sql.SQLDataException: data exception: division by zero
; data exception: division by zero; nested exception is java.sql.SQLDataException: data exception: division by zero
2022-11-09 16:29:55.689 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:29:55.690 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:29:55.691 ERROR --- c.s.restService.PortfolioService         : 
### Error querying database.  Cause: java.sql.SQLDataException: data exception: division by zero
### The error may exist in file [C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\PortfolioMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT I.NAME, I.CODE,   I.CURRENT_PRICE,   I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS   CURRENT_VALUE,   H.QUANTITY*H.BUYPRICE AS   INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE))   AS PROFIT_OR_LOSS,   ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100   AS PERCENTAGE_CAHNGE   FROM holdings H   JOIN instrument I   ON h.code=i.code   WHERE H.CLIENT_ID=?
### Cause: java.sql.SQLDataException: data exception: division by zero
; data exception: division by zero; nested exception is java.sql.SQLDataException: data exception: division by zero
2022-11-09 16:29:58.813 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:29:58.814 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:29:58.817 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 5
2022-11-09 16:29:58.818  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:30:13.162  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 16:30:15.006  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 16:32:40.584 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 16:32:40.603 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 16:32:40.626 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 16:32:40.628  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:32:42.356 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 16:32:42.357 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: 1(String)
2022-11-09 16:32:42.360 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 2
2022-11-09 16:32:42.361  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:32:58.147 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:32:58.148 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:32:58.150 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 2
2022-11-09 16:32:58.151  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:34:03.405 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:34:03.406 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:34:03.408 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:34:03.412 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:34:03.414 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:34:03.416 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:34:03.417  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:34:03.423  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:34:03.438 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:34:03.440 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:34:03.444 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:34:03.446  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:34:21.579 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:34:21.582 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:34:21.584 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:34:21.588  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:34:21.595 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 16:34:21.596 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 16:34:21.598 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 16:34:21.598  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:34:21.611 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 16:34:21.612 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 16:34:21.614 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 2
2022-11-09 16:34:21.615  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:34:29.130 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 16:34:29.131 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 16:34:29.132 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 16:34:29.133 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 16:34:29.134 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2739.0(Float), 1(String)
2022-11-09 16:34:29.136 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 16:34:29.136 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 16:34:29.137 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 16:34:29.138 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 2
2022-11-09 16:34:29.138 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 16:34:29.140 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), AMZN(String)
2022-11-09 16:34:29.142 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 16:34:29.146 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 16:34:29.146 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 130.15(BigDecimal), 17(Integer), 1(String), AMZN(String)
2022-11-09 16:34:29.147 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 16:34:29.147 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 16:34:29.148 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 130.15(BigDecimal), 1(String), AMZN(String), BUY(String), 25cd6c30-47c4-4601-821a-ce1f1311c36a(String), 7(Integer), 2022-11-09(LocalDate)
2022-11-09 16:34:29.149 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 16:34:31.316 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:34:31.318 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:34:31.320 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:34:31.320 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:34:31.321 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:34:31.322  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:34:31.323 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:34:31.323  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:34:31.341 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:34:31.342 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:34:31.344 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:34:31.344  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:34:35.121 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:34:35.122 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:34:35.124 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 3
2022-11-09 16:34:35.126  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:34:40.522 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:34:40.523 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:34:40.525 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:34:40.525  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:34:40.528 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:34:40.529 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:34:40.531 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:34:40.532  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:34:40.545 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:34:40.546 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:34:40.548 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:34:40.549  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:35:36.962  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 16:35:36.991 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:35:36.992 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 16:35:36.993 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 16:35:36.994  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:35:36.998 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:35:36.999 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 16:35:37.000 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 16:35:37.001  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:39:10.963 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 16:39:10.964 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 16:39:10.965 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 16:39:10.966  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 16:39:11.015 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:39:11.016 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:39:11.017 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:39:11.018  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:39:11.019 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:39:11.020 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:39:11.022 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:39:11.023  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:39:11.029 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:39:11.031 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:39:11.036 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:39:11.036  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:40:26.392 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:40:26.393 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:40:26.394 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 3
2022-11-09 16:40:26.396  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:40:34.862 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:40:34.865 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:40:34.865 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:40:34.866 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:40:34.867  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:40:34.867 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:40:34.868 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:40:34.869  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:40:34.879 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:40:34.879 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:40:34.880 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:40:34.881  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:40:37.967 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:40:37.968 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:40:37.969 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 3
2022-11-09 16:40:37.971  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:40:43.474 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:40:43.475 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:40:43.476 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:40:43.477  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:40:43.476 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:40:43.479 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:40:43.481 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:40:43.482  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:40:43.492 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:40:43.492 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:40:43.493 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:40:43.494  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:40:44.387 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:40:44.388 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:40:44.394 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 3
2022-11-09 16:40:44.395  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:40:55.968 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:40:55.969 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:40:55.970 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:40:55.971  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:40:55.970 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:40:55.973 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:40:55.975 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:40:55.976  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:40:55.984 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:40:55.986 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:40:55.987 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:40:55.988  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:42:39.017 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:42:39.018 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:42:39.019 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 3
2022-11-09 16:42:39.020  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:42:45.554 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:42:45.556 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:42:45.557 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:42:45.558  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:42:45.562 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:42:45.563 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:42:45.564 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:42:45.565  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:42:45.574 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:42:45.575 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:42:45.577 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:42:45.577  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:44:25.740  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 16:44:25.740 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:44:25.743 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 16:44:25.744 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 16:44:25.745  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:44:25.755 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:44:25.756 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 16:44:25.757 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 16:44:25.758  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:44:39.706 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 16:44:39.707 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 16:44:39.708 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 16:44:39.708  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 16:44:39.742 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:44:39.743 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:44:39.743 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:44:39.744 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:44:39.744 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:44:39.744  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:44:39.745 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:44:39.747  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:44:39.754 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:44:39.757 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:44:39.762 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 2
2022-11-09 16:44:39.762  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:46:24.642 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 16:46:24.643 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:46:24.644 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:46:24.645 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:46:24.646  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:46:24.646 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 16:46:24.648 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 16:46:24.650 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 2
2022-11-09 16:46:24.650  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:46:24.644 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 16:46:24.652 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 4
2022-11-09 16:46:24.652  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:46:25.517 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:46:25.518 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:46:25.519 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 3
2022-11-09 16:46:25.520  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:50:20.080  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 16:50:21.895  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 16:50:36.482 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 16:50:36.502 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 16:50:36.523 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 16:50:36.524  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 16:50:36.594 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:50:36.595 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:50:36.595 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:50:36.596 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:50:36.597  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:50:36.597 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:50:36.602 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 16:50:36.602  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:50:36.621 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:50:36.623 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:50:36.628 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 16:50:36.629  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:51:05.362 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:51:05.363 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:51:05.367 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 8
2022-11-09 16:51:05.367  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:51:08.934 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 16:51:08.935 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 16:51:08.937 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 3
2022-11-09 16:51:08.938  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:51:10.598 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 16:51:10.599 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: 1(String)
2022-11-09 16:51:10.603 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 5
2022-11-09 16:51:10.604  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:51:17.137 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 16:51:17.138 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 16:51:17.140 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 3
2022-11-09 16:51:17.141  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:51:17.863 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:51:17.864 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:51:17.866 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 8
2022-11-09 16:51:17.867  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:51:18.733 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:51:18.734 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:51:18.735 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:51:18.736  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:51:18.739 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 16:51:18.740 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 16:51:18.743 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 16:51:18.744  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:51:18.747 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 16:51:18.749 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 16:51:18.751 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 6
2022-11-09 16:51:18.752  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:51:49.912 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 16:51:49.913 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 16:51:49.914 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 16:51:49.915 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 16:51:49.916 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2332.1(Float), 1(String)
2022-11-09 16:51:49.918 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 16:51:49.919 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 16:51:49.920 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 16:51:49.921 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 6
2022-11-09 16:51:49.922 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 16:51:49.923 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), MTA(String)
2022-11-09 16:51:49.925 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 16:51:49.930 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 16:51:49.930 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 17.12(BigDecimal), 93(Integer), 1(String), MTA(String)
2022-11-09 16:51:49.932 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 16:51:49.932 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 16:51:49.932 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 17.12(BigDecimal), 1(String), MTA(String), BUY(String), 1b50192b-385e-448e-9954-594c38e8420e(String), 89(Integer), 2022-11-09(LocalDate)
2022-11-09 16:51:49.932 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 16:51:54.000 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:51:54.001 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:51:54.003 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 9
2022-11-09 16:51:54.004  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:52:40.675 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:52:40.676 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:52:40.676 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:52:40.677 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:52:40.678 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:52:40.679  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:52:40.686 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 16:52:40.687  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:52:40.698 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:52:40.700 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:52:40.702 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 16:52:40.703  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:53:15.617 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 16:53:15.619 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 16:53:15.620 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 16:53:15.620  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:53:25.377 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:53:25.378 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:53:25.379 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:53:25.380 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 16:53:25.381 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 16:53:25.382 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 16:53:25.382  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:53:25.389 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 16:53:25.390 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 16:53:25.391 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 16:53:25.392  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:53:28.007 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:53:28.008 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:53:28.009 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:53:28.009 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 16:53:28.010 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 16:53:28.011 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 16:53:28.011  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:53:28.019 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 16:53:28.020 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 16:53:28.021 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 16:53:28.022  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:53:32.321 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:53:32.322 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:53:32.323 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:53:32.323 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 16:53:32.323 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 16:53:32.325 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 16:53:32.326 DEBUG --- c.s.i.m.S.updateClientTable              : ==>  Preparing: update client set client_smallchange_wallet = ? where client_id = ?
2022-11-09 16:53:32.327 DEBUG --- c.s.i.m.S.updateClientTable              : ==> Parameters: 2397.10009765625000000000000000000000(BigDecimal), 1(String)
2022-11-09 16:53:32.327 DEBUG --- c.s.i.m.S.updateClientTable              : <==    Updates: 1
2022-11-09 16:53:32.328 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==>  Preparing: update client_finance_details set account_balance = ? where client_id = ? and account_number = ?
2022-11-09 16:53:32.329 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==> Parameters: 7711.99000000000000000000000000000000(BigDecimal), 1(String), HDFC Bank(String)
2022-11-09 16:53:32.329 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : <==    Updates: 1
2022-11-09 16:53:32.330  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:53:32.337 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 16:53:32.337 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 16:53:32.338 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 16:53:32.338  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:53:38.057 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:53:38.058 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:53:38.059 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:53:38.059 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 16:53:38.060 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 16:53:38.060 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 16:53:38.061 DEBUG --- c.s.i.m.S.updateClientTable              : ==>  Preparing: update client set client_smallchange_wallet = ? where client_id = ?
2022-11-09 16:53:38.061 DEBUG --- c.s.i.m.S.updateClientTable              : ==> Parameters: 3047.10009765625000000000000000000000(BigDecimal), 1(String)
2022-11-09 16:53:38.061 DEBUG --- c.s.i.m.S.updateClientTable              : <==    Updates: 1
2022-11-09 16:53:38.062 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==>  Preparing: update client_finance_details set account_balance = ? where client_id = ? and account_number = ?
2022-11-09 16:53:38.062 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==> Parameters: 7061.99000000000000000000000000000000(BigDecimal), 1(String), HDFC Bank(String)
2022-11-09 16:53:38.062 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : <==    Updates: 1
2022-11-09 16:53:38.063  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:53:38.070 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 16:53:38.071 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 16:53:38.071 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 16:53:38.071  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:53:42.699 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:53:42.700 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:53:42.701 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 9
2022-11-09 16:53:42.701  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:53:43.445 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:53:43.445 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:53:43.445 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:53:43.445 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:53:43.446 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:53:43.446  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:53:43.448 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 16:53:43.448  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:53:43.461 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:53:43.463 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:53:43.465 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 16:53:43.465  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:54:38.999 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:54:39.000 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 16:54:39.001 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 16:54:39.001 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:54:39.002 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:54:39.002  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:54:39.006 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 16:54:39.006  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:54:39.009 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 16:54:39.010 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 16:54:39.014 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 6
2022-11-09 16:54:39.014  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 16:54:41.856 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:54:41.858 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:54:41.859 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 9
2022-11-09 16:54:41.859  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:55:03.009 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:55:03.010 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:55:03.010 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:55:03.011 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:55:03.011 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:55:03.011  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:55:03.013 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 16:55:03.014  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:55:03.021 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:55:03.022 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:55:03.024 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 16:55:03.024  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:57:27.631 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 16:57:27.632 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 16:57:27.634 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 9
2022-11-09 16:57:27.634  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 16:57:56.497 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 16:57:56.497 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:57:56.499 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 16:57:56.500 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:57:56.500 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 16:57:56.500  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 16:57:56.502 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 16:57:56.502  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 16:57:56.510 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 16:57:56.511 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 16:57:56.512 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 16:57:56.512  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:02:55.839  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 17:02:57.666  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 17:03:07.133 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:03:07.156 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:03:07.184 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:03:07.186  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:03:07.267 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:03:07.267 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:03:07.267 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:03:07.269 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:03:07.270 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:03:07.270  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:03:07.278 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:03:07.278  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:03:07.300 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:03:07.307 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:03:07.329 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:03:07.330  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:03:29.234 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:03:29.235 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:03:29.237 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:03:29.238  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:03:29.241 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:03:29.242 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:03:29.245 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:03:29.246  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:03:29.246 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:03:29.247 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:03:29.252 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 6
2022-11-09 17:03:29.252  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:03:31.119 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:03:31.120 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 17:03:31.122 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 8
2022-11-09 17:03:31.122  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:03:49.988 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:03:49.989 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:03:49.991 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:03:49.993 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:03:49.994 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:03:49.989 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:03:49.996 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 6
2022-11-09 17:03:49.997  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:03:49.997 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:03:49.998  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:03:49.998 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:03:49.998  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:03:57.316 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 17:03:57.317 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 17:03:57.318 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 17:03:57.319 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 17:03:57.321 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2332.1(Float), 1(String)
2022-11-09 17:03:57.324 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 17:03:57.325 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:03:57.326 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:03:57.328 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 6
2022-11-09 17:03:57.329 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 17:03:57.331 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), MTA(String)
2022-11-09 17:03:57.332 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 17:03:57.337 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 17:03:57.338 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 17.12(BigDecimal), 93(Integer), 1(String), MTA(String)
2022-11-09 17:03:57.339 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 17:03:57.340 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 17:03:57.342 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 1112.5(BigDecimal), 1(String), MTA(String), BUY(String), 53b02c6f-1c42-4885-9339-9057a0ad7d80(String), 89(Integer), 2022-11-09(LocalDate)
2022-11-09 17:03:57.342 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 17:04:12.720 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:04:12.721 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 17:04:12.727 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 9
2022-11-09 17:04:12.727  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:05:27.957 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:05:27.959 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: undefined(String)
2022-11-09 17:05:27.961 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 17:05:27.962  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:05:36.495 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:05:36.496 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: undefined(String)
2022-11-09 17:05:36.497 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 17:05:36.498  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:05:42.390 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:05:42.391 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: undefined(String)
2022-11-09 17:05:42.392 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 17:05:42.392  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:06:54.266 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 17:06:54.268 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: undefined(String)
2022-11-09 17:06:54.270 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 17:06:54.271  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:06:55.038 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 17:06:55.039 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: undefined(String)
2022-11-09 17:06:55.039 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 0
2022-11-09 17:06:55.039  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:06:56.658 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:06:56.660 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:06:56.660  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:06:56.661 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:06:56.663  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:06:56.670 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:06:56.671 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:06:56.671 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:06:56.672  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:07:00.533  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:12:52.038  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:12:52.041 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:12:52.043 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:12:52.043 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:12:52.044  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:12:52.051 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:12:52.052 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:12:52.053 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:12:52.053  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:17:11.934  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:17:11.935 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:17:11.936 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:17:11.936 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:17:11.937  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:17:11.943 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:17:11.945 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:17:11.945 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:17:11.945  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:17:20.523 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:17:20.524 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:17:20.525 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:17:20.525  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:17:20.555 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:17:20.555 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:17:20.556 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:17:20.556 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:17:20.556 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:17:20.557  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:17:20.563 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:17:20.564  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:17:20.574 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:17:20.575 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:17:20.577 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:17:20.578  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:23:22.058  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:23:22.058 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:23:22.059 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:23:22.060 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:23:22.061  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:23:22.069 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:23:22.072 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:23:22.072 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:23:22.073  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:23:27.662 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:23:27.663 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:23:27.664 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:23:27.664  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:23:27.692 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:23:27.692 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:23:27.693 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:23:27.693 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:23:27.694 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:23:27.694  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:23:27.695 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:23:27.696  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:23:27.703 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:23:27.704 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:23:27.706 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:23:27.706  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:24:11.520  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:24:11.520 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:24:11.521 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:24:11.522 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:24:11.522  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:24:11.529 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:24:11.530 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:24:11.531 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:24:11.532  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:24:15.685 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:24:15.685 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:24:15.687 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:24:15.687  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:24:15.712 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:24:15.712 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:24:15.712 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:24:15.714 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:24:15.714 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:24:15.714  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:24:15.715 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:24:15.716  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:24:15.721 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:24:15.722 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:24:15.724 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:24:15.725  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:25:47.326  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:25:47.329 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:25:47.330 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:25:47.331 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:25:47.331  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:25:47.339 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:25:47.340 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:25:47.341 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:25:47.341  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:25:50.319 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:25:50.320 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:25:50.321 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:25:50.321  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:25:50.363 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:25:50.364 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:25:50.366 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:25:50.366  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:25:50.366 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:25:50.368 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:25:50.369 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:25:50.369  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:25:50.390 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:25:50.393 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:25:50.397 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:25:50.397  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:26:29.399  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:26:29.430 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:26:29.431 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:26:29.431 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:26:29.432  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:26:29.436 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:26:29.437 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:26:29.437 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:26:29.438  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:28:36.874  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:28:36.878 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:28:36.879 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:28:36.880 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:28:36.881  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:28:36.888 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:28:36.889 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:28:36.889 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:28:36.890  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:28:41.199 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:28:41.200 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:28:41.200 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:28:41.201  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:28:41.293 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:28:41.294 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:28:41.295 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:28:41.295  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:28:41.304 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:28:41.305 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:28:41.306 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:28:41.306  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:28:41.366 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:28:41.368 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:28:41.369 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:28:41.370  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:29:41.857  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:29:41.862 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:29:41.864 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:29:41.864 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:29:41.864  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:29:41.875 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:29:41.876 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:29:41.876 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:29:41.877  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:29:47.852 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:29:47.853 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:29:47.855 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:29:47.855  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:29:47.903 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:29:47.904 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:29:47.905 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:29:47.908  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:29:47.910 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:29:47.911 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:29:47.913 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:29:47.914  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:29:47.920 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:29:47.921 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:29:47.923 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:29:47.923  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:30:10.090 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:30:10.092 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:30:10.094 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:30:10.095  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:30:58.113  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:30:58.122 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:30:58.124 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:30:58.125 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:30:58.126  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:30:58.136 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:30:58.138 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:30:58.138 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:30:58.139  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:31:14.385  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:31:14.391 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:31:14.392 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:31:14.393 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:31:14.393  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:31:14.401 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:31:14.402 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:31:14.403 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:31:14.403  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:31:19.818 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:31:19.819 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:31:19.819 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:31:19.819  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:31:19.861 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:31:19.861 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:31:19.862 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:31:19.863  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:31:19.866 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:31:19.867 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:31:19.868 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:31:19.868  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:31:19.874 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:31:19.875 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:31:19.876 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:31:19.876  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:31:46.195  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:31:46.199 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:31:46.200 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:31:46.201 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:31:46.201  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:31:46.207 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:31:46.209 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:31:46.210 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:31:46.210  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:32:42.317  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:32:42.322 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:32:42.323 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:32:42.324 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:32:42.324  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:32:42.331 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:32:42.331 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:32:42.332 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:32:42.332  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:34:30.189 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:34:30.190 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:34:30.191 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:34:30.192  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:34:30.229 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:34:30.229 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:34:30.230 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:34:30.231 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:34:30.231 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:34:30.231  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:34:30.231 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:34:30.232  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:34:30.237 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:34:30.238 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:34:30.239 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:34:30.240  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:34:53.322  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 17:34:55.330  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 17:34:57.337 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:34:57.357 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:34:57.377 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:34:57.378  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:34:57.442 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:34:57.443 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:34:57.444 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:34:57.445 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:34:57.446 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:34:57.447  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:34:57.449 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:34:57.449  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:34:57.492 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:34:57.494 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:34:57.498 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:34:57.499  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:35:29.748 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:35:29.749 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 17:35:29.753 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 8
2022-11-09 17:35:29.754  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:35:32.542 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:35:32.543 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:35:32.544 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:35:32.545 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:35:32.545  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:35:32.545 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:35:32.551 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:35:32.551  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:35:32.567 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:35:32.569 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:35:32.572 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:35:32.573  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:35:47.022 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:35:47.024 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:35:47.026 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:35:47.027  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:37:25.700 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:37:25.702 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:37:25.703 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:37:25.704  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:37:25.706  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:37:25.742 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:37:25.744 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:37:25.745 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:37:25.745  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:37:26.651  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:37:26.655 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:37:26.658 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:37:26.659 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:37:26.659  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:37:26.666 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:37:26.667 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:37:26.668 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:37:26.668  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:37:29.518 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:37:29.519 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:37:29.520 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:37:29.521  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:37:29.553 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:37:29.554 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:37:29.555 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:37:29.555 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:37:29.555 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:37:29.556  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:37:29.561 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:37:29.562  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:37:29.575 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:37:29.576 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:37:29.577 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:37:29.578  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:37:45.067 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:37:45.068 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 17:37:45.073 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 8
2022-11-09 17:37:45.073  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:37:46.897 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:37:46.898 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:37:46.900 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:37:46.900  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:37:46.902 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:37:46.903 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:37:46.905 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:37:46.905  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:37:46.906 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:37:46.907 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:37:46.909 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 6
2022-11-09 17:37:46.909  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:38:02.972 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:38:02.973 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:38:02.974 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:38:02.974 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:38:02.974 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:38:02.975  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:38:02.977 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:38:02.978  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:38:02.985 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:38:02.986 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:38:02.988 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:38:02.988  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:38:05.417 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:38:05.418 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 17:38:05.420 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 8
2022-11-09 17:38:05.421  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:38:05.920 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:38:05.920 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:38:05.921 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:38:05.921 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:38:05.921  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:38:05.922 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:38:05.926 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:38:05.927 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:38:05.928  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:38:05.929 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:38:05.933 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 6
2022-11-09 17:38:05.933  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:38:15.956 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 17:38:15.957 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 17:38:15.958 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 17:38:15.959 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 17:38:15.960 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 3319.6(Float), 1(String)
2022-11-09 17:38:15.962 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 17:38:15.963 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:38:15.964 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:38:15.966 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 6
2022-11-09 17:38:15.967 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 17:38:15.967 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), MTA(String)
2022-11-09 17:38:15.969 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 17:38:15.974 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 17:38:15.974 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 43.21(BigDecimal), 14(Integer), 1(String), MTA(String)
2022-11-09 17:38:15.975 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 17:38:15.975 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 17:38:15.976 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 125.0(BigDecimal), 1(String), MTA(String), BUY(String), 378ac9aa-e49f-41f0-af50-c19eb595575c(String), 10(Integer), 2022-11-09(LocalDate)
2022-11-09 17:38:15.976 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 17:38:22.176 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:38:22.177 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:38:22.178 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:38:22.178 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:38:22.178 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:38:22.178  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:38:22.179 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:38:22.179  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:38:22.200 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:38:22.201 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:38:22.206 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:38:22.206  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:38:30.537 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:38:30.539 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:38:30.539 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:38:30.540 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:38:30.540 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:38:30.540  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:38:30.543 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:38:30.543  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:38:30.541 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:38:30.544 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:38:30.545 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 6
2022-11-09 17:38:30.546  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:38:31.425 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:38:31.426 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 17:38:31.428 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 9
2022-11-09 17:38:31.428  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:38:37.291 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:38:37.292 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:38:37.293 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:38:37.293 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:38:37.294 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:38:37.294 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:38:37.295 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 6
2022-11-09 17:38:37.296  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:38:37.292 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:38:37.294  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:38:37.297 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:38:37.298  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:38:42.556 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:38:42.557 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:38:42.558 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:38:42.558  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:38:42.563 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:38:42.564 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:38:42.565 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:38:42.565  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:39:01.281 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 17:39:01.282 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 17:39:01.283 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 17:39:01.283 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 17:39:01.284 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2839.6(Float), 1(String)
2022-11-09 17:39:01.284 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 17:39:01.285 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:39:01.285 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:39:01.286 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 6
2022-11-09 17:39:01.287 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==>  Preparing: Insert into holdings (holding_id,buyprice,client_id,code,quantity) Values (?,?,?,?,?)
2022-11-09 17:39:01.288 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : ==> Parameters: 31d960c8-17e8-430c-8325-ec2c75174ec2(String), 480(BigDecimal), 1(String), ICICIP(String), 1(Integer)
2022-11-09 17:39:01.288 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsInsert      : <==    Updates: 1
2022-11-09 17:39:01.289 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 17:39:01.289 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 480(BigDecimal), 1(String), ICICIP(String), BUY(String), f8c5f6e1-4ba9-4639-87ab-6e26a361b708(String), 1(Integer), 2022-11-09(LocalDate)
2022-11-09 17:39:01.290 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 17:39:06.439 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:39:06.440 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 17:39:06.441 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 10
2022-11-09 17:39:06.443  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:39:09.197 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:39:09.197 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:39:09.198 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:39:09.199 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:39:09.202 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 7
2022-11-09 17:39:09.202  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:39:09.200 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:39:09.205  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:39:09.213 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:39:09.214 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:39:09.215 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 7
2022-11-09 17:39:09.216  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:39:21.310 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:39:21.311 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:39:21.311 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:39:21.312 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:39:21.312  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:39:21.314 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:39:21.311 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:39:21.316 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:39:21.316 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:39:21.317  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:39:21.317 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 7
2022-11-09 17:39:21.318  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:39:22.193 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:39:22.194 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 17:39:22.195 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 10
2022-11-09 17:39:22.196  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:39:24.888 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 17:39:24.889 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: 1(String)
2022-11-09 17:39:24.890 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 7
2022-11-09 17:39:24.891  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:39:28.367 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 17:39:28.368 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 17:39:28.369 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 3
2022-11-09 17:39:28.369  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:39:31.082 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:39:31.084 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 17:39:31.085 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 10
2022-11-09 17:39:31.086  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:39:32.012 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:39:32.012 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:39:32.013 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:39:32.015 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:39:32.015  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:39:32.016 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:39:32.017 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:39:32.021 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 7
2022-11-09 17:39:32.013 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:39:32.021  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:39:32.023 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:39:32.025  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:39:58.730 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:39:58.731 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:39:58.732 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:39:58.732 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:39:58.733  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:39:58.733 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:39:58.734 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:39:58.734  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:40:28.783 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:40:28.784 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:40:28.785 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:40:28.785 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:40:28.787  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:40:28.787 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:40:28.791 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 7
2022-11-09 17:40:28.793  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:40:28.805 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:40:28.806 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:40:28.806 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 7
2022-11-09 17:40:28.807  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:40:45.010 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:40:45.010 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:40:45.010 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:40:45.012 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:40:45.012  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:40:45.010 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:40:45.016 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:40:45.016 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:40:45.017  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:40:45.018 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:40:45.019 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 7
2022-11-09 17:40:45.020  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:40:52.783 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 17:40:52.783 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 17:40:52.784 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 17:40:52.785 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 17:40:52.785 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 2537.2(Float), 1(String)
2022-11-09 17:40:52.786 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 17:40:52.786 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:40:52.786 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:40:52.787 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 7
2022-11-09 17:40:52.788 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==>  Preparing: SELECT buyprice from holdings where client_id=? and code=?
2022-11-09 17:40:52.788 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : ==> Parameters: 1(String), AMZN(String)
2022-11-09 17:40:52.788 DEBUG --- c.s.i.m.OrderMapper.getHoldingBuyPrice   : <==      Total: 1
2022-11-09 17:40:52.789 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==>  Preparing: Update holdings set buyprice=?, quantity=? where client_id=? and code=?
2022-11-09 17:40:52.790 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : ==> Parameters: 1499.27(BigDecimal), 4(Integer), 1(String), AMZN(String)
2022-11-09 17:40:52.790 DEBUG --- c.s.i.m.O.putBuyTradeHoldingsUpdate      : <==    Updates: 1
2022-11-09 17:40:52.790 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 17:40:52.791 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 302.4(BigDecimal), 1(String), AMZN(String), BUY(String), 6fa61098-0a46-4b3c-bb50-1ce764d0c3f3(String), 3(Integer), 2022-11-09(LocalDate)
2022-11-09 17:40:52.791 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 17:41:02.904 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 17:41:02.905 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 17:41:02.905 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 17:41:02.906 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 17:41:02.906 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==> Parameters: 2638.0(Float), 1(String)
2022-11-09 17:41:02.906 DEBUG --- c.s.i.m.O.updateClientWalletSell         : <==    Updates: 1
2022-11-09 17:41:02.907 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:41:02.907 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:41:02.908 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 7
2022-11-09 17:41:02.909 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==>  Preparing: Update holdings set quantity=? where client_id=? and code=?
2022-11-09 17:41:02.909 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==> Parameters: 3(Integer), 1(String), AMZN(String)
2022-11-09 17:41:02.910 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : <==    Updates: 1
2022-11-09 17:41:02.910 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 17:41:02.911 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==> Parameters: 100.8(BigDecimal), 1(String), AMZN(String), SELL(String), d4647e29-812a-440e-b7fe-6e638f6dcb15(String), 1(Integer), 2022-11-09(LocalDate)
2022-11-09 17:41:02.911 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : <==    Updates: 1
2022-11-09 17:41:05.473 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:41:05.473 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:41:05.474 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:41:05.474 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:41:05.474 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:41:05.474  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:41:05.475 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 7
2022-11-09 17:41:05.475  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:41:05.484 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:41:05.485 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:41:05.486 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 7
2022-11-09 17:41:05.486  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:41:11.364 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:41:11.365 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 17:41:11.367 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 12
2022-11-09 17:41:11.367  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:41:17.304 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 17:41:17.305 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: 1(String)
2022-11-09 17:41:17.306 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 4
2022-11-09 17:41:17.306  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:41:20.452 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 17:41:20.453 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: 1(String)
2022-11-09 17:41:20.455 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 8
2022-11-09 17:41:20.455  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:41:24.858 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:41:24.858 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:41:24.860 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:41:24.861 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:41:24.862 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:41:24.861 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:41:24.863  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:41:24.862  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:41:24.868 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:41:24.870 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:41:24.872 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 7
2022-11-09 17:41:24.873  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:41:29.064 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:41:29.065 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:41:29.067 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 7
2022-11-09 17:41:29.067  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:41:42.598 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 17:41:42.599 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: 1(String)
2022-11-09 17:41:42.600 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 17:41:42.600 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 17:41:42.601 DEBUG --- c.s.i.m.O.updateClientWalletSell         : ==> Parameters: 9488.2(Float), 1(String)
2022-11-09 17:41:42.601 DEBUG --- c.s.i.m.O.updateClientWalletSell         : <==    Updates: 1
2022-11-09 17:41:42.602 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:41:42.602 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:41:42.603 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 7
2022-11-09 17:41:42.604 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==>  Preparing: Update holdings set quantity=? where client_id=? and code=?
2022-11-09 17:41:42.605 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : ==> Parameters: 0(Integer), 1(String), LMF(String)
2022-11-09 17:41:42.605 DEBUG --- c.s.i.m.O.putSellTradeHoldingsUpdate     : <==    Updates: 1
2022-11-09 17:41:42.605 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 17:41:42.606 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : ==> Parameters: 6850.2(BigDecimal), 1(String), LMF(String), SELL(String), 8eafdebb-bad7-41d6-ae1f-82e36ad93b3e(String), 6(Integer), 2022-11-09(LocalDate)
2022-11-09 17:41:42.606 DEBUG --- c.s.i.m.OrderMapper.putSellTradeOrder    : <==    Updates: 1
2022-11-09 17:41:47.960 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:41:47.961 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 17:41:47.963 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 13
2022-11-09 17:41:47.964  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:41:54.780 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:41:54.781 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:41:54.781 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:41:54.782 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:41:54.782 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:41:54.783  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:41:54.862 ERROR --- c.s.restService.PortfolioService         : 
### Error querying database.  Cause: java.sql.SQLDataException: data exception: division by zero
### The error may exist in file [C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\PortfolioMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT I.NAME, I.CODE,   I.CURRENT_PRICE,   I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS   CURRENT_VALUE,   H.QUANTITY*H.BUYPRICE AS   INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE))   AS PROFIT_OR_LOSS,   ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100   AS PERCENTAGE_CAHNGE   FROM holdings H   JOIN instrument I   ON h.code=i.code   WHERE H.CLIENT_ID=?
### Cause: java.sql.SQLDataException: data exception: division by zero
; data exception: division by zero; nested exception is java.sql.SQLDataException: data exception: division by zero
2022-11-09 17:41:54.873 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:41:54.875 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:41:54.875 ERROR --- c.s.restService.PortfolioService         : 
### Error querying database.  Cause: java.sql.SQLDataException: data exception: division by zero
### The error may exist in file [C:\Users\Associate\Desktop\New folder (2)\Small-Change-Team-Loki\SmallChangeJava\target\classes\com\smallchange\integration\mapper\PortfolioMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT I.NAME, I.CODE,   I.CURRENT_PRICE,   I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS   CURRENT_VALUE,   H.QUANTITY*H.BUYPRICE AS   INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE))   AS PROFIT_OR_LOSS,   ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100   AS PERCENTAGE_CAHNGE   FROM holdings H   JOIN instrument I   ON h.code=i.code   WHERE H.CLIENT_ID=?
### Cause: java.sql.SQLDataException: data exception: division by zero
; data exception: division by zero; nested exception is java.sql.SQLDataException: data exception: division by zero
2022-11-09 17:42:37.490  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 17:42:39.320  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 17:42:44.252 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:42:44.271 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:42:44.294 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:42:44.296  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:42:44.379 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:42:44.380 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:42:44.380 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:42:44.381 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:42:44.382 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:42:44.383  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:42:44.387 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:42:44.388  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:42:44.421 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:42:44.442 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:42:44.451 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:42:44.452  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:42:47.370 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:42:47.372 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:42:47.373 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:42:47.373  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:42:59.265 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:42:59.265 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:42:59.267 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:42:59.267 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:42:59.268 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:42:59.269 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:42:59.270 DEBUG --- c.s.i.m.S.updateClientTable              : ==>  Preparing: update client set client_smallchange_wallet = ? where client_id = ?
2022-11-09 17:42:59.271 DEBUG --- c.s.i.m.S.updateClientTable              : ==> Parameters: 3755.60000000000000000000000000000000(BigDecimal), 1(String)
2022-11-09 17:42:59.274 DEBUG --- c.s.i.m.S.updateClientTable              : <==    Updates: 1
2022-11-09 17:42:59.274 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==>  Preparing: update client_finance_details set account_balance = ? where client_id = ? and account_number = ?
2022-11-09 17:42:59.275 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==> Parameters: 145.60000000000000000000000000000000(BigDecimal), 1(String), KOTAK Bank(String)
2022-11-09 17:42:59.276 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : <==    Updates: 1
2022-11-09 17:42:59.276  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:42:59.285 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:42:59.286 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:42:59.287 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:42:59.287  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:05.539 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:43:05.540 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:43:05.541 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:43:05.541 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:05.542 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:05.543 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:05.544  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:05.552 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:05.553 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:05.554 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:05.555  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:06.416 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:43:06.417 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:43:06.418 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:43:06.419 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:06.420 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:06.421 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:06.421  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:06.430 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:06.432 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:06.433 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:06.434  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:06.604 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:43:06.605 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:43:06.606 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:43:06.607 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:06.608 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:06.610 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:06.612  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:06.640 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:06.641 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:06.642 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:06.643  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:06.750 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:43:06.751 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:43:06.752 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:43:06.753 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:06.753 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:06.754 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:06.754  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:06.762 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:06.764 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:06.764 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:06.765  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:06.914 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:43:06.915 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:43:06.916 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:43:06.916 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:06.916 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:06.917 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:06.917  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:06.926 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:06.926 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:06.927 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:06.927  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:07.024 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:43:07.025 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:43:07.026 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:43:07.028 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:07.028 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:07.029 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:07.029  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:07.037 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:07.038 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:07.039 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:07.040  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:07.148 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:43:07.149 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:43:07.150 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:43:07.150 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:07.151 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:07.151 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:07.152  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:07.160 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:07.161 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:07.161 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:07.161  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:11.143 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:43:11.144 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:43:11.145 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:43:11.145 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:11.146 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:11.147 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:11.147 DEBUG --- c.s.i.m.S.updateClientTable              : ==>  Preparing: update client set client_smallchange_wallet = ? where client_id = ?
2022-11-09 17:43:11.148 DEBUG --- c.s.i.m.S.updateClientTable              : ==> Parameters: 3901.10000000000000000000000000000000(BigDecimal), 1(String)
2022-11-09 17:43:11.148 DEBUG --- c.s.i.m.S.updateClientTable              : <==    Updates: 1
2022-11-09 17:43:11.148 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==>  Preparing: update client_finance_details set account_balance = ? where client_id = ? and account_number = ?
2022-11-09 17:43:11.149 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==> Parameters: 0.10000000000000000000000000000000(BigDecimal), 1(String), KOTAK Bank(String)
2022-11-09 17:43:11.149 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : <==    Updates: 1
2022-11-09 17:43:11.150  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:11.159 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:11.159 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:11.160 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:11.160  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:12.352 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:43:12.353 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:43:12.353 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:43:12.354 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:12.355 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:12.356 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:12.356  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:43:12.364 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:43:12.365 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:43:12.366 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:43:12.366  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:45:44.707 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:45:44.708 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:45:44.709 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:45:44.710  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:45:44.716 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:45:44.718 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1(String)
2022-11-09 17:45:44.714 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:45:44.719 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:45:44.721 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 6
2022-11-09 17:45:44.721 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:45:44.721  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:45:44.721  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:45:45.181 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:45:45.182 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1(String)
2022-11-09 17:45:45.186 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 8
2022-11-09 17:45:45.186  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:45:47.316 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:45:47.317 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:45:47.318 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:45:47.318 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:45:47.321 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:45:47.321  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:45:47.325 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:45:47.326  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:45:47.340 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:45:47.342 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:45:47.343 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:45:47.344  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:47:24.001 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:47:24.003 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:47:24.003 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:47:24.004  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:47:24.005  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:47:24.022 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:47:24.023 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:47:24.023 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:47:24.024  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:47:30.183 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:47:30.184 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: undefined(String)
2022-11-09 17:47:30.185 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 0
2022-11-09 17:47:30.185 ERROR --- c.s.restService.OrderMapperService       : No Sell instrument
2022-11-09 17:47:30.185 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:47:30.185  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:47:30.188 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:47:30.194 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:47:30.194  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:47:33.749 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:47:33.750  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:47:33.756 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:47:33.757 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:47:33.757  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:47:33.768 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:47:33.771 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:47:33.772 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:47:33.772  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:47:57.583  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:47:57.584 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:47:57.585 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:47:57.585 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:47:57.586  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:47:57.598 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:47:57.599 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:47:57.600 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:47:57.600  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:51:06.616  WARN --- .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: "undefined"]
2022-11-09 17:51:06.616 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:51:06.618 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:51:06.619 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:51:06.620  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:51:06.625 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:51:06.627 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: undefined(String)
2022-11-09 17:51:06.628 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:51:06.629  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:52:44.861  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 17:52:50.343  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 17:53:10.411 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:53:10.445 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:53:10.474 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:53:10.476  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:53:10.632 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:53:10.633 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:53:10.634 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:53:10.635 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:53:10.636 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:53:10.636  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:53:10.639 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:53:10.639  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:53:10.663 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:53:10.665 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:53:10.669 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:53:10.670  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:53:33.943 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:53:33.944 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:53:33.946 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:53:33.947  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:53:50.091 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:53:50.092 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:53:50.094 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:53:50.095 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:53:50.096 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:53:50.097 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:53:50.098 DEBUG --- c.s.i.m.S.updateClientTable              : ==>  Preparing: update client set client_smallchange_wallet = ? where client_id = ?
2022-11-09 17:53:50.099 DEBUG --- c.s.i.m.S.updateClientTable              : ==> Parameters: 862222.60000000000000000000000000000000(BigDecimal), 1(String)
2022-11-09 17:53:50.103 DEBUG --- c.s.i.m.S.updateClientTable              : <==    Updates: 1
2022-11-09 17:53:50.104 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==>  Preparing: update client_finance_details set account_balance = ? where client_id = ? and account_number = ?
2022-11-09 17:53:50.106 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==> Parameters: 44786666.60000000000000000000000000000000(BigDecimal), 1(String), ICICI Bank(String)
2022-11-09 17:53:50.106 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : <==    Updates: 1
2022-11-09 17:53:50.106  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:53:50.128 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:53:50.129 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:53:50.130 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:53:50.130  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:54:06.039 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:54:06.042 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:54:06.043 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:54:06.043 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:54:06.046 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:54:06.048 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:54:06.048  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:54:06.078 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:54:06.079 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:54:06.080 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:54:06.081  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:54:28.952 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:54:28.954 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:54:28.955 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:54:28.957 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:54:28.958 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:54:28.960 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:54:28.961 DEBUG --- c.s.i.m.S.updateClientTable              : ==>  Preparing: update client set client_smallchange_wallet = ? where client_id = ?
2022-11-09 17:54:28.964 DEBUG --- c.s.i.m.S.updateClientTable              : ==> Parameters: 862679.20000000000000000000000000000000(BigDecimal), 1(String)
2022-11-09 17:54:28.965 DEBUG --- c.s.i.m.S.updateClientTable              : <==    Updates: 1
2022-11-09 17:54:28.966 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==>  Preparing: update client_finance_details set account_balance = ? where client_id = ? and account_number = ?
2022-11-09 17:54:28.967 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : ==> Parameters: 0E-32(BigDecimal), 1(String), KOTAK Bank(String)
2022-11-09 17:54:28.968 DEBUG --- c.s.i.m.S.updateClientFinanceTable       : <==    Updates: 1
2022-11-09 17:54:28.968  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:54:28.980 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:54:28.982 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:54:28.983 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:54:28.984  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:54:36.338 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:54:36.339 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:54:36.341 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:54:36.342 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:54:36.342 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:54:36.345 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:54:36.349  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:54:36.365 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==>  Preparing: select ACCOUNT_NUMBER, ACCOUNT_BALANCE from CLIENT_FINANCE_DETAILS where client_id=?
2022-11-09 17:54:36.365 DEBUG --- c.s.i.m.S.getBankAccountDetails          : ==> Parameters: 1(String)
2022-11-09 17:54:36.366 DEBUG --- c.s.i.m.S.getBankAccountDetails          : <==      Total: 3
2022-11-09 17:54:36.367  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:55:20.716 DEBUG --- c.s.i.m.C.getClientMail                  : ==>  Preparing: select client_id from client where client_mail=?
2022-11-09 17:55:20.717 DEBUG --- c.s.i.m.C.getClientMail                  : ==> Parameters: teamloki@gmail.com(String)
2022-11-09 17:55:20.718 DEBUG --- c.s.i.m.C.getClientMail                  : <==      Total: 1
2022-11-09 17:55:30.482 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:55:30.483 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki@gmail.com(String), teamloki(String)
2022-11-09 17:55:30.484 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:55:30.485  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:55:30.536 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:55:30.537 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1(String)
2022-11-09 17:55:30.538 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:55:30.539  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:55:30.541 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:55:30.542 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:55:30.549 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:55:30.549  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:55:30.562 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:55:30.563 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1(String)
2022-11-09 17:55:30.565 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 6
2022-11-09 17:55:30.566  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:56:21.328 DEBUG --- c.s.i.m.C.getClientMail                  : ==>  Preparing: select client_id from client where client_mail=?
2022-11-09 17:56:21.330 DEBUG --- c.s.i.m.C.getClientMail                  : ==> Parameters: teamloki@gmail.com(String)
2022-11-09 17:56:21.330 DEBUG --- c.s.i.m.C.getClientMail                  : <==      Total: 1
2022-11-09 17:56:30.072 DEBUG --- c.s.i.m.C.getClientMail                  : ==>  Preparing: select client_id from client where client_mail=?
2022-11-09 17:56:30.073 DEBUG --- c.s.i.m.C.getClientMail                  : ==> Parameters: teamloki@gmail.com(String)
2022-11-09 17:56:30.074 DEBUG --- c.s.i.m.C.getClientMail                  : <==      Total: 1
2022-11-09 17:56:49.057 DEBUG --- c.s.i.m.C.getClientMail                  : ==>  Preparing: select client_id from client where client_mail=?
2022-11-09 17:56:49.058 DEBUG --- c.s.i.m.C.getClientMail                  : ==> Parameters: teamloki00@gmail.com(String)
2022-11-09 17:56:49.059 DEBUG --- c.s.i.m.C.getClientMail                  : <==      Total: 0
2022-11-09 17:56:49.060 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==>  Preparing: insert into client(CLIENT_ID ,CLIENT_NAME ,CLIENT_MAIL ,CLIENT_SMALLCHANGE_WALLET ,PASSWORD ) values(?,?,?,?,?)
2022-11-09 17:56:49.061 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==> Parameters: 1ef85f97-1fe5-4800-97ef-c4c88fcd8250(String), iugiu(String), teamloki00@gmail.com(String), 0(BigDecimal), teamloki(String)
2022-11-09 17:56:49.062 DEBUG --- m.C.putRegistrationAuthenticationDetails : <==    Updates: 1
2022-11-09 17:56:49.062  INFO --- c.s.r.ClientAuthenticationService        : Successfully registered
2022-11-09 17:56:56.936 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 17:56:56.937 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: teamloki00@gmail.com(String), teamloki(String)
2022-11-09 17:56:56.939 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 17:56:56.939  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 17:56:56.989 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:56:56.990 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1ef85f97-1fe5-4800-97ef-c4c88fcd8250(String)
2022-11-09 17:56:56.991 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:56:56.992  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:56:56.997 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:56:56.997 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1ef85f97-1fe5-4800-97ef-c4c88fcd8250(String)
2022-11-09 17:56:56.998 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:56:56.999  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:56:57.005 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 17:56:57.007 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: 1ef85f97-1fe5-4800-97ef-c4c88fcd8250(String)
2022-11-09 17:56:57.007 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 17:56:57.008  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 17:57:14.341 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:57:14.343 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1ef85f97-1fe5-4800-97ef-c4c88fcd8250(String)
2022-11-09 17:57:14.344 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:57:14.345  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:57:14.356 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:57:14.358 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1ef85f97-1fe5-4800-97ef-c4c88fcd8250(String)
2022-11-09 17:57:14.359 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 0
2022-11-09 17:57:14.359 ERROR --- c.s.restService.OrderMapperService       : No Sell instrument
2022-11-09 17:57:14.369 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:57:14.370 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:57:14.373 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:57:14.373  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:58:43.093 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 17:58:43.094 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: 1ef85f97-1fe5-4800-97ef-c4c88fcd8250(String)
2022-11-09 17:58:43.095 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 17:58:43.095  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 17:58:43.892 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 17:58:43.892 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: 1ef85f97-1fe5-4800-97ef-c4c88fcd8250(String)
2022-11-09 17:58:43.893 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 17:58:43.893 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 17:58:43.894 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 17:58:43.894  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 17:58:43.901 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 17:58:43.901  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 17:58:43.907 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 17:58:43.909 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: 1ef85f97-1fe5-4800-97ef-c4c88fcd8250(String)
2022-11-09 17:58:43.910 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 0
2022-11-09 17:58:43.910 ERROR --- c.s.restService.OrderMapperService       : No Sell instrument
2022-11-09 18:02:24.519  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-09 18:02:26.388  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-09 18:02:52.045 DEBUG --- c.s.i.m.C.getClientMail                  : ==>  Preparing: select client_id from client where client_mail=?
2022-11-09 18:02:52.070 DEBUG --- c.s.i.m.C.getClientMail                  : ==> Parameters: ak@gmail.com(String)
2022-11-09 18:02:52.093 DEBUG --- c.s.i.m.C.getClientMail                  : <==      Total: 0
2022-11-09 18:02:52.095 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==>  Preparing: insert into client(CLIENT_ID ,CLIENT_NAME ,CLIENT_MAIL ,CLIENT_SMALLCHANGE_WALLET ,PASSWORD ) values(?,?,?,?,?)
2022-11-09 18:02:52.096 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String), gi(String), ak@gmail.com(String), 2000(BigDecimal), teamloki(String)
2022-11-09 18:02:52.097 DEBUG --- m.C.putRegistrationAuthenticationDetails : <==    Updates: 1
2022-11-09 18:02:52.097  INFO --- c.s.r.ClientAuthenticationService        : Successfully registered
2022-11-09 18:02:57.730 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 18:02:57.731 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: ak@gmail.com(String), teamloki(String)
2022-11-09 18:02:57.735 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 18:02:57.736  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 18:02:57.799 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 18:02:57.800 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 18:02:57.800 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:02:57.802 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:02:57.802 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 18:02:57.802 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 18:02:57.802  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 18:02:57.802  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 18:02:57.824 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 18:02:57.826 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:02:57.826 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 18:02:57.827  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 18:03:04.634 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 18:03:04.635 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:04.636 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 18:03:04.637  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 18:03:04.642 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 18:03:04.642 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 18:03:04.643 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 18:03:04.646 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:04.646 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 18:03:04.647  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 18:03:04.647 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 0
2022-11-09 18:03:04.649 ERROR --- c.s.restService.OrderMapperService       : No Sell instrument
2022-11-09 18:03:16.762 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 18:03:16.763 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:16.764 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 18:03:16.765 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 18:03:16.766 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 1500.0(Float), a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:16.767 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 18:03:16.768 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 18:03:16.769 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:16.769 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 0
2022-11-09 18:03:16.769 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 18:03:16.771 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 12.5(BigDecimal), a62cae7c-aed6-48c8-a9ec-2d254d269743(String), MTA(String), BUY(String), null(String), 40(Integer), 1995-12-16(LocalDate)
2022-11-09 18:03:16.771 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : <==    Updates: 1
2022-11-09 18:03:27.820 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 18:03:27.821 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:27.821 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 18:03:27.823 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 18:03:27.823 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 676.0(Float), a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:27.824 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 18:03:27.824 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 18:03:27.826 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:27.826 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 0
2022-11-09 18:03:27.828 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 18:03:27.829 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 824(BigDecimal), a62cae7c-aed6-48c8-a9ec-2d254d269743(String), GOOG(String), BUY(String), null(String), 1(Integer), 1995-12-16(LocalDate)
2022-11-09 18:03:27.915 ERROR --- o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS
### The error may exist in com/smallchange/integration/mapper/OrderMapper.java (best guess)
### The error may involve com.smallchange.integration.mapper.OrderMapper.putBuyTradeOrder-Inline
### The error occurred while setting parameters
### SQL: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS
; integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS; nested exception is java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS] with root cause
org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.execute(Unknown Source)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor97.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at jdk.proxy2/jdk.proxy2.$Proxy76.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy2/jdk.proxy2.$Proxy78.putBuyTradeOrder(Unknown Source)
	at com.smallchange.integration.OrderDaoMyBatisImpl.putBuyTrade(OrderDaoMyBatisImpl.java:157)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$FastClassBySpringCGLIB$$8f0a3bd1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$EnhancerBySpringCGLIB$$a7aa155c.putBuyTrade(<generated>)
	at com.smallchange.restService.OrderMapperService.queryPutBuyTrade(OrderMapperService.java:96)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-11-09 18:03:30.421 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 18:03:30.421 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 18:03:30.422 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 18:03:30.422 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:30.423 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 18:03:30.424  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 18:03:30.427 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 18:03:30.428  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 18:03:36.141 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 18:03:36.142 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:36.143 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 18:03:36.145 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 18:03:36.145 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 196.0(Float), a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:36.146 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 18:03:36.146 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 18:03:36.147 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:36.149 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 0
2022-11-09 18:03:36.151 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 18:03:36.152 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 480(BigDecimal), a62cae7c-aed6-48c8-a9ec-2d254d269743(String), ICICIP(String), BUY(String), null(String), 1(Integer), 1995-12-16(LocalDate)
2022-11-09 18:03:36.155 ERROR --- o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS
### The error may exist in com/smallchange/integration/mapper/OrderMapper.java (best guess)
### The error may involve com.smallchange.integration.mapper.OrderMapper.putBuyTradeOrder-Inline
### The error occurred while setting parameters
### SQL: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS
; integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS; nested exception is java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS] with root cause
org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.execute(Unknown Source)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor97.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at jdk.proxy2/jdk.proxy2.$Proxy76.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy2/jdk.proxy2.$Proxy78.putBuyTradeOrder(Unknown Source)
	at com.smallchange.integration.OrderDaoMyBatisImpl.putBuyTrade(OrderDaoMyBatisImpl.java:157)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$FastClassBySpringCGLIB$$8f0a3bd1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$EnhancerBySpringCGLIB$$a7aa155c.putBuyTrade(<generated>)
	at com.smallchange.restService.OrderMapperService.queryPutBuyTrade(OrderMapperService.java:96)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-11-09 18:03:42.771 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 18:03:42.772 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:42.772 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 18:03:42.775 ERROR --- o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.smallchange.exception.InsufficientFundsException: You do not have enough wallet balance money to execute this buy trade] with root cause
com.smallchange.exception.InsufficientFundsException: You do not have enough wallet balance money to execute this buy trade
	at com.smallchange.integration.OrderDaoMyBatisImpl.putBuyTrade(OrderDaoMyBatisImpl.java:77)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$FastClassBySpringCGLIB$$8f0a3bd1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$EnhancerBySpringCGLIB$$a7aa155c.putBuyTrade(<generated>)
	at com.smallchange.restService.OrderMapperService.queryPutBuyTrade(OrderMapperService.java:96)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-11-09 18:03:53.982 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 18:03:53.984 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:53.984 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 1
2022-11-09 18:03:53.985  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:03:54.742 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 18:03:54.743 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 18:03:54.743 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:54.744 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:54.744 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 18:03:54.744 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 18:03:54.745  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 18:03:54.745  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 18:03:54.756 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 18:03:54.757 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:54.758 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 18:03:54.758  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 18:03:55.420 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 18:03:55.421 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:55.421 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 18:03:55.421 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 18:03:55.422  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 18:03:55.422 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 18:03:55.423 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 18:03:55.424  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 18:03:55.427 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 18:03:55.428 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:03:55.429 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 0
2022-11-09 18:03:55.429 ERROR --- c.s.restService.OrderMapperService       : No Sell instrument
2022-11-09 18:04:04.216 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 18:04:04.217 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:04.218 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 1
2022-11-09 18:04:04.219  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:05.187 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 18:04:05.188 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:05.189 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 18:04:05.189 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 18:04:05.190  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 18:04:05.190 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:05.191 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 18:04:05.191  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 18:04:05.203 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 18:04:05.204 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:05.205 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 18:04:05.206  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 18:04:05.921 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 18:04:05.922 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:05.923 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 1
2022-11-09 18:04:05.923  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:09.306 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 18:04:09.307 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:09.308 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 18:04:09.308  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:09.918 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 18:04:09.919 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:09.920 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 1
2022-11-09 18:04:09.921  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:10.434 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 18:04:10.436 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:10.436 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 18:04:10.437  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:11.419 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 18:04:11.421 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:11.422 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 18:04:11.423  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:11.964 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 18:04:11.965 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:11.966 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 1
2022-11-09 18:04:11.967  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:13.036 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 18:04:13.037 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 18:04:13.037 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 18:04:13.038 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 18:04:13.038 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:13.039 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 0
2022-11-09 18:04:13.039 ERROR --- c.s.restService.OrderMapperService       : No Sell instrument
2022-11-09 18:04:13.039 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 18:04:13.039  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 18:04:13.037 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:13.042 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 18:04:13.043  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 18:04:14.930 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 18:04:14.932 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:14.932 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 1
2022-11-09 18:04:14.933  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:32.315 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 18:04:32.317 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:32.318 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 18:04:32.318  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 18:04:32.323 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 18:04:32.325 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:32.325 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 18:04:32.326  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 18:04:32.345 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 18:04:32.346 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:32.346 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 18:04:32.347  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 18:04:44.891 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 18:04:44.892 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:44.893 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 1
2022-11-09 18:04:44.894  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:46.553 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 18:04:46.555 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:46.556 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 1
2022-11-09 18:04:46.557  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:47.397 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 18:04:47.398 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:47.399 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 18:04:47.399  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:48.917 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 18:04:48.918 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:48.920 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 1
2022-11-09 18:04:48.921  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:49.907 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 18:04:49.909 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:49.910 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 18:04:49.911  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:50.686 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 18:04:50.687 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:50.688 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 1
2022-11-09 18:04:50.689  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:51.428 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 18:04:51.429 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:51.430 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 1
2022-11-09 18:04:51.431  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:04:53.356 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 18:04:53.358 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:53.359 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 18:04:53.359  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 18:04:53.363 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 18:04:53.363 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 18:04:53.369 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 18:04:53.370  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 18:04:53.375 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 18:04:53.376 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:04:53.376 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 0
2022-11-09 18:04:53.377 ERROR --- c.s.restService.OrderMapperService       : No Sell instrument
2022-11-09 18:05:17.642 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 18:05:17.643 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:05:17.643 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 18:05:17.644 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 18:05:17.645 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 183.5(Float), a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:05:17.645 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 18:05:17.646 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 18:05:17.646 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: a62cae7c-aed6-48c8-a9ec-2d254d269743(String)
2022-11-09 18:05:17.647 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 0
2022-11-09 18:05:17.647 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 18:05:17.648 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 12.5(BigDecimal), a62cae7c-aed6-48c8-a9ec-2d254d269743(String), MTA(String), BUY(String), null(String), 1(Integer), 1995-12-16(LocalDate)
2022-11-09 18:05:17.651 ERROR --- o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS
### The error may exist in com/smallchange/integration/mapper/OrderMapper.java (best guess)
### The error may involve com.smallchange.integration.mapper.OrderMapper.putBuyTradeOrder-Inline
### The error occurred while setting parameters
### SQL: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS
; integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS; nested exception is java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS] with root cause
org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.execute(Unknown Source)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor97.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at jdk.proxy2/jdk.proxy2.$Proxy76.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy2/jdk.proxy2.$Proxy78.putBuyTradeOrder(Unknown Source)
	at com.smallchange.integration.OrderDaoMyBatisImpl.putBuyTrade(OrderDaoMyBatisImpl.java:157)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$FastClassBySpringCGLIB$$8f0a3bd1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$EnhancerBySpringCGLIB$$a7aa155c.putBuyTrade(<generated>)
	at com.smallchange.restService.OrderMapperService.queryPutBuyTrade(OrderMapperService.java:96)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-11-09 18:05:52.626 DEBUG --- c.s.i.m.C.getClientMail                  : ==>  Preparing: select client_id from client where client_mail=?
2022-11-09 18:05:52.627 DEBUG --- c.s.i.m.C.getClientMail                  : ==> Parameters: a0k@gmail.com(String)
2022-11-09 18:05:52.627 DEBUG --- c.s.i.m.C.getClientMail                  : <==      Total: 0
2022-11-09 18:05:52.628 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==>  Preparing: insert into client(CLIENT_ID ,CLIENT_NAME ,CLIENT_MAIL ,CLIENT_SMALLCHANGE_WALLET ,PASSWORD ) values(?,?,?,?,?)
2022-11-09 18:05:52.628 DEBUG --- m.C.putRegistrationAuthenticationDetails : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String), fyufyu(String), a0k@gmail.com(String), 2000(BigDecimal), teamloki(String)
2022-11-09 18:05:52.629 DEBUG --- m.C.putRegistrationAuthenticationDetails : <==    Updates: 1
2022-11-09 18:05:52.629  INFO --- c.s.r.ClientAuthenticationService        : Successfully registered
2022-11-09 18:06:04.273 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==>  Preparing: select client_id from client where client_mail=? and password=?
2022-11-09 18:06:04.274 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : ==> Parameters: a0k@gmail.com(String), teamloki(String)
2022-11-09 18:06:04.275 DEBUG --- c.s.i.m.C.getLoginAuthenticationDetails  : <==      Total: 1
2022-11-09 18:06:04.275  INFO --- c.s.r.ClientAuthenticationService        : Successful retrieval
2022-11-09 18:06:04.328 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 18:06:04.329 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:04.330 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 18:06:04.330  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 18:06:04.333 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 18:06:04.334 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:04.334 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 18:06:04.335  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 18:06:04.343 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==>  Preparing: SELECT I.NAME, I.CODE, I.CURRENT_PRICE, I.CATEGORY,H.BUYPRICE,H.QUANTITY,H.QUANTITY*I.CURRENT_PRICE AS CURRENT_VALUE, H.QUANTITY*H.BUYPRICE AS INVESTED_AMOUNT,((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)) AS PROFIT_OR_LOSS, ((((H.QUANTITY*I.CURRENT_PRICE)-(H.QUANTITY*H.BUYPRICE)))/(H.QUANTITY*H.BUYPRICE))*100 AS PERCENTAGE_CAHNGE FROM holdings H JOIN instrument I ON h.code=i.code WHERE H.CLIENT_ID=?
2022-11-09 18:06:04.344 DEBUG --- c.s.i.m.P.getUserPortfolio               : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:04.344 DEBUG --- c.s.i.m.P.getUserPortfolio               : <==      Total: 0
2022-11-09 18:06:04.344  INFO --- c.s.restService.PortfolioService         : Successful retrieval
2022-11-09 18:06:12.981 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 18:06:12.984 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:12.984 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 18:06:12.985  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:06:14.703 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 18:06:14.705 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:14.706 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 18:06:14.706  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:06:15.229 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 18:06:15.230 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:15.230 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 0
2022-11-09 18:06:15.230  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:06:16.805 DEBUG --- c.s.i.m.T.getTradeHistory                : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where client_id=?
2022-11-09 18:06:16.807 DEBUG --- c.s.i.m.T.getTradeHistory                : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:16.808 DEBUG --- c.s.i.m.T.getTradeHistory                : <==      Total: 0
2022-11-09 18:06:16.808  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:06:17.518 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='SELL' and client_id=?
2022-11-09 18:06:17.519 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:17.519 DEBUG --- c.s.i.m.T.getTradeHistoryBySell          : <==      Total: 0
2022-11-09 18:06:17.519  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:06:18.387 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==>  Preparing: select i.name,o.code,o.quantity,o.direction,o.Buy_price,i.category from orders o join instrument i on o.code=i.code where direction='BUY' and client_id=?
2022-11-09 18:06:18.389 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:18.389 DEBUG --- c.s.i.m.T.getTradeHistoryByBuy           : <==      Total: 0
2022-11-09 18:06:18.390  INFO --- c.s.restService.TradeHistoryService      : Successful retrieval
2022-11-09 18:06:19.871 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==>  Preparing: select CLIENT_SMALLCHANGE_WALLET from client where CLIENT_ID =?
2022-11-09 18:06:19.872 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:19.874 DEBUG --- c.s.i.m.S.getSmallChangeWalletAmount     : <==      Total: 1
2022-11-09 18:06:19.874  INFO --- c.s.r.SmallChangeWalletService           : Successful retrieval
2022-11-09 18:06:19.880 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 18:06:19.880 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==>  Preparing: select code, name, category, cast(round(current_price,2) as numeric(16,2)) from instrument
2022-11-09 18:06:19.881 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : ==> Parameters: 
2022-11-09 18:06:19.881 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:19.882 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 0
2022-11-09 18:06:19.882 ERROR --- c.s.restService.OrderMapperService       : No Sell instrument
2022-11-09 18:06:19.882 DEBUG --- c.s.i.m.OrderMapper.getBuyInstrument     : <==      Total: 10
2022-11-09 18:06:19.882  INFO --- c.s.restService.OrderMapperService       : Successful retrieval
2022-11-09 18:06:45.531 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==>  Preparing: select COALESCE(CLIENT_SMALLCHANGE_WALLET,0.0) from client where client_id=?
2022-11-09 18:06:45.532 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:45.532 DEBUG --- c.s.i.m.OrderMapper.getClientWallet      : <==      Total: 1
2022-11-09 18:06:45.533 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==>  Preparing: Update client set client_smallchange_wallet =? where client_id=?
2022-11-09 18:06:45.534 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : ==> Parameters: 1604.0(Float), ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:45.534 DEBUG --- c.s.i.m.O.updateClientWalletBuy          : <==    Updates: 1
2022-11-09 18:06:45.535 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==>  Preparing: SELECT h.holding_id, h.client_id, h.code, i.name, i.category, h.quantity, cast(round(i.current_price,2) as numeric(16,2)) FROM holdings h join instrument i on h.code=i.code WHERE h.client_id=?
2022-11-09 18:06:45.535 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : ==> Parameters: ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String)
2022-11-09 18:06:45.535 DEBUG --- c.s.i.m.OrderMapper.getSellInstrument    : <==      Total: 0
2022-11-09 18:06:45.536 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==>  Preparing: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
2022-11-09 18:06:45.537 DEBUG --- c.s.i.m.OrderMapper.putBuyTradeOrder     : ==> Parameters: 198(BigDecimal), ef1c1e06-a64e-4037-a7ba-b0e0d65f084a(String), UBR(String), BUY(String), null(String), 2(Integer), 1995-12-16(LocalDate)
2022-11-09 18:06:45.540 ERROR --- o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS
### The error may exist in com/smallchange/integration/mapper/OrderMapper.java (best guess)
### The error may involve com.smallchange.integration.mapper.OrderMapper.putBuyTradeOrder-Inline
### The error occurred while setting parameters
### SQL: Insert into orders (buy_price,client_id,code,direction,order_id,quantity,timestamp) Values (?,?,?,?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS
; integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS; nested exception is java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS] with root cause
org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation; SYS_PK_10101 table: ORDERS
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementDML.insertSingleRow(Unknown Source)
	at org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.execute(Unknown Source)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor97.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at jdk.proxy3/jdk.proxy3.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at jdk.proxy2/jdk.proxy2.$Proxy76.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:145)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy2/jdk.proxy2.$Proxy78.putBuyTradeOrder(Unknown Source)
	at com.smallchange.integration.OrderDaoMyBatisImpl.putBuyTrade(OrderDaoMyBatisImpl.java:157)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$FastClassBySpringCGLIB$$8f0a3bd1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.smallchange.integration.OrderDaoMyBatisImpl$$EnhancerBySpringCGLIB$$a7aa155c.putBuyTrade(<generated>)
	at com.smallchange.restService.OrderMapperService.queryPutBuyTrade(OrderMapperService.java:96)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
